<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2020 愿远方依旧有篮球为伴 致敬24号 科比</title>
      <link href="/posts/17041.html"/>
      <url>/posts/17041.html</url>
      
        <content type="html"><![CDATA[<p>天有不测风云，人有旦夕祸福，听到科比坠机身亡同机还有他的女儿的消息深感震惊，科比是乔丹之后最接近篮球之神称号的人，他的荣誉太多，单场81分是大家永久的记忆，黑曼巴是他最贴切的外号，因为他能在球场的任何一个位置快速的终结对手。别了科比，别了黑曼巴，篮球场将永远记住你24号。是不是因为承载的荣誉太多了老天必须要带走他，还是上帝想和他唠嗑打球，就这样让一个41岁，退役仅仅3年的刚开始享受幸福人生的温暖球员离开了。</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20200127105837972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>你退役时的一番话，到现在仍然激励着我不断向前：你早起努力的日子，那些你熬夜奋斗的时光，那些你觉得太累再也站不起来却依然支撑自己起身的夜晚，那才是梦想的力量，重要的不是结果，是过程。谢谢你老科，走好。马刺主帅格雷格-波波维奇在接受采访时对此表示很伤心，言语无法形容每个人的心情。</p><p><img src="https://img-blog.csdnimg.cn/20200127105813257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>“我们都失落至极，这简直就是一场悲剧。现在言语无法形容每个人对此的心情。我们都心系科比一家以及他们如今在面对的事情，我们应对他们致以诚挚的哀悼。”波波维奇说道。没有防备，时间错位，中国球迷在睡梦中被迫接受事实，是真的!<br><img src="https://img-blog.csdnimg.cn/20200127105822305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>同时间的快船队与马刺队比赛上，为悼念科比，前24秒违规操作不开始比赛，科比最为人们所牢记的是他对世界范围内参与篮球运动的人们的激励，还有他为了激发自己潜力竭尽全力的那种追求精神。科比是一个很有智慧的人，他在输出自己的智慧方面也很慷慨，他觉得这是他的责任担当，把自己的智慧与篮球接班人进行分享。科比也很高兴把自己对篮球比赛的热爱传承给吉安娜。”</p><p><img src="https://img-blog.csdnimg.cn/20200127105955854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>连二女儿Gigi也是深受影响，在一次采访中，科比说现在的凌晨四点，他还是坚持早起坚持锻炼，就把家人也带到其中，因为你想要的东西只有通过努力才能得到，而如今科比再也见不到凌晨四点洛杉矶的太阳。NBA官方声明:科比-布莱恩特搭乘直升机不幸坠亡，全机九人无一生还，科比的二女儿吉安娜也在这起直升机事故中罹难，没有人会想象会相信!<br><img src="https://img-blog.csdnimg.cn/20200127110009566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>对不起了，在2020新年之际带给大家的不幸消息，甚至希望天亮的慢一点。在此，我们向科比妻子—瓦妮莎、科比家人、湖人队和整个体育世界表达沉痛悼念之意！<br><img src="https://img-blog.csdnimg.cn/2020012711013741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="再见了，永远的科比·布莱恩特"><a href="#再见了，永远的科比·布莱恩特" class="headerlink" title="再见了，永远的科比·布莱恩特"></a>再见了，永远的科比·布莱恩特</h2><h2 id="再见了，永远的24号"><a href="#再见了，永远的24号" class="headerlink" title="再见了，永远的24号"></a>再见了，永远的24号</h2><p><img src="https://img-blog.csdnimg.cn/20200127110157839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 24号科比 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科比 </tag>
            
            <tag> NBA </tag>
            
            <tag> 24号 </tag>
            
            <tag> 篮球 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020（有感而发）常说&quot;三分技术，七分人品&quot; 在计算机领域真的是这样的吗？</title>
      <link href="/posts/25994.html"/>
      <url>/posts/25994.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h4><p>我想应该会有许多人说过这样的话，比如：在社会中，三分靠打拼，七分靠人品，亦或是四分靠实力，六分靠人品…. 但是，对于我们计算机领域的人来说，真的是这样的吗？有没有去深度思考这个问题？今天早上突然这个问题让我思绪了很久，然后有感而发这篇博客，想来，一般像这种感想，应该看的人也不是很多，不过能把自己想的做一个笔记也算挺好的了。</p><p>==================  以下内容仅个人观点 =============================<br>（海纳百川，有容乃大，望读者尊重每个人内心看法）</p><a id="more"></a><h4 id="2、概述"><a href="#2、概述" class="headerlink" title="2、概述"></a>2、概述</h4><p>所谓<strong>三分靠实力，七分靠人品</strong>，就是说以后进入社会了，在外打拼，人品体现的就非常重要了，几乎没有人能够脱离群体，个人的力量总是有限的，而团队不一样了，好的团队的潜力是无穷的，正如常说三个臭皮匠赛过诸葛亮！ </p><h4 id="3、谈谈学生时代的计算机江湖"><a href="#3、谈谈学生时代的计算机江湖" class="headerlink" title="3、谈谈学生时代的计算机江湖"></a>3、谈谈学生时代的计算机江湖</h4><p>学生阶段，不管男生还是女生，现在学计算机的比例算是比较高的了，男女比例没有xx专业离谱，可能一个专业就几个男生亦或是几个女生，比例相差悬殊。然而计算机不一样了，现在感觉比例整体看来比较均衡，毕竟钱多好找工作嘛，关键是计算机领域广泛，你不一定要成为编程大牛，每天和代码计较，又或是被一个bug折磨一天甚至一星期都有可能，喜欢编程的，你可以选择去做开发，去参加一些学科竞赛，例如ACM，创新创业大赛，服务外包等等，这些都对找工作挺有帮助的。<br>那么，相对于女生而言，或者不太热爱编程的同学，可以选择其他方向，例如数据库方面，软件测试，运维等等。软件测试相比于开发来说门槛要低很多，尤其是前几年，门槛更低。现在软件测试方面也变得香了起来！<br>现在网络化的时代，在计算机领域发展确实挺有前途的，经过几年找工作工资比较看来，除开金融专业了，计算机领域工资几乎排榜首！由此可见，学好计算机，真的挺重要的。</p><hr><p>那么，问题来了，这与我们这片文章主题有什么关系呢？  <strong>或许学生时代就是这样吧，不需要考虑很多外在因素，只需要好好学习，今天比昨天进步就已经挺不错了。</strong> 我想提一提学生时代，是为了引出技术关键词，纵览学生时代，其实我们在大学里学的知识是挺少的，因为大学里学习的不只是只有老师教授的知识，还有为了步入社会前的必备知识与技能，除开名牌大学，作为普通学生来说，在大学里学的技术都是比较浅显的，例如难道会让大学生直接去深入研究人工智能吗？ 还有学的一些开发技能都是很老套的了，比如学校里教jsp html sql java 很少会加入一些新元素去讲，可能去工作了才发觉以前学的都是这么老套的东东。很多深入的东西都略过了…尽管这些会觉得老套，但这是“黄金”，是基础，是思维，学过了这些东西，我们就有了学习其他东西的能力，正如机器学习那样，都是一个学习的过程。所谓“学如逆水行舟，不进则退”。</p><h4 id="4、谈谈对人品的看法"><a href="#4、谈谈对人品的看法" class="headerlink" title="4、谈谈对人品的看法"></a>4、谈谈对人品的看法</h4><p>上文谈及到了学生时代的技术，那么我们来谈谈人品吧。学生时代，是培养一个人能力的黄金时期，错过了这个黄金时期，以后就比较难来获取这些能力了，因为给你犯错的机会将会越来越少，外界的压力会越来越严格。那么，对于人品，大家是怎样看的了？</p><hr><p>不同的人会有不同的看法，还望海纳百川有容乃大，下面是我个人看法：<br><strong><font color="red">我觉得吧，人品好不好不在于你有多少朋友，真的，我觉得这是我目前的性格特点，而是在于有一个比较舒适的人际关系。</font></strong> 朋友的数量真的很重要吗？人的一生或许会遇到很多人，一部分讨厌你，一部分觉得和你相处比较好。曾经看到一段话：要相信这个世界，尽管有99%的讨厌你，但整个世界还是有1%的人喜欢你，为你加油鼓励，这么一想，是不是一下豁然开朗。</p><p>===================  人际关系处理 ==============================</p><p>我想会打开这篇博客的，多半是学生把，或许我和你们的感觉是相同的，我们一个人冷静好好想一想，其实从刚开始读书到现在10多年来，朋友真的多吗？过去读书的伙伴现在还联系吗？有多少个很真心的朋友？</p><p>想了想，或许两只手就能数完了，或许还有一只手就能数完。<strong><font color="red">纵观一下，朋友的数量确实没有想象中的那么多，但这并不重要。因为做人嘛，不需要太多的计较，保持乐观的态度开心就好！</font></strong> </p><h4 id="5、谈谈“三分技术，七分人品”"><a href="#5、谈谈“三分技术，七分人品”" class="headerlink" title="5、谈谈“三分技术，七分人品”"></a>5、谈谈“三分技术，七分人品”</h4><p>上文简单论述了技术与人品，下面我将直接说一下我对这句话的理解，从计算机领域角度来看这句话。</p><p>这句话作为学生的话，当然不是我们自己说的，更多的或许是步入社会的人士传授给我们的，或许会说羡慕我们学生时代，进入社会后挺艰难的，三分靠打拼，七分靠人品。</p><hr><p>其它专业我就不说了，我主要是从计算机专业角度来看这个问题。我们不妨提出一些问题：</p><ul><li><input disabled="" type="checkbox"> 是哪一类人士传授我们这句话？</li><li><input disabled="" type="checkbox"> 为什么总是会有这句话出现？</li><li><input disabled="" type="checkbox"> 这句话如果实践了，真的会成功吗？</li></ul><p>从我个人来看， <strong>传授给我们这句话的人自己其实并不是很成功！</strong> 成功人士一般都是比较低调的，如果真正问起成功的理由，或许就是那一段沉默寡言的时光。正是因为自己人品不够好，才会说出7成人品的重要性，说实在，步入社会，个体独立性显得比较重要了，除开家庭了，多数人都要在外单独打拼，每次看到老一辈的叔叔们辛苦的在工地工作<br>，又想起了一句话：<strong><font color="red">今天的你也要继续努力，因为身边的人都在负重前行！</font></strong> 学生时代，或许比的就是成绩，看谁比较优秀，身边总会有一批优秀的同学，能够拿到学校的奖学金，竞赛的金奖等等。 那么，迈入社会，又何尝不是呢？</p><hr><p>我们依旧比的是成绩，优秀的依旧在发光，说技术只要三分，其实客观地在羡慕有技术的人士，其实自己内心不甘自己技术一般，对于在计算机领域有追求的程序员，谁不想成为一位出色有影响力的那一位，或许会找学习会出现瓶颈期这种借口，但其实是自己忘记了最初的初心，放下脚步不向前迈了，选择逃避，选择原地等待机会。那为什么会出现三分技术呢？是因为别人在默默努力的时刻，时刻认为技术只需要三分，这种思维一直影响着，然而当别人金子发光的时候，又开始了羡慕。<strong><font color="red">其实，总体来说就是不要因为这句话就让你放松了，尽管说技术只有三分，但技术上的三分是有一定门槛的，就像nba你要投进一个三分球需要长期的积累与学习，为什么库里会被公认为三分射手，而且还是超乎常人的超远三分，有独特的投球方式，因为那一段沉默寡闻的时光！</font></strong></p><h4 id="6、对于上文的简单说明"><a href="#6、对于上文的简单说明" class="headerlink" title="6、对于上文的简单说明"></a>6、对于上文的简单说明</h4><p><strong>这篇博客是我有感而发，因为这句话一直在我脑海游荡，所以我想吐露一下自己的内心想法，希望读者不要有过多的看法</strong>，当然，这篇文章应该不会很多人去看，一般感想性的或许关注的比较少。</p><p>对于这句话，每个人的看法都是不同的，我们不能太过陈旧，要上升一定高度来看待问题的本质，在不同的地方这句话当然效果不一样，比如说一份工作，真正看重的是你的个人能力吗？ 不是，是你的的团队合作能力，沟通表达能力等，这些才占大部分比例，比如技术很牛，然而没有一个团队精神，上班经常迟到，平常独来独往，那与公司文化相符和吗？</p><p><strong>不管如何，我们不能因为这一句话就放松了自己对技术的追求，至于人品，我觉的有一定技术的程序员人品都挺不错的，正如你看到了这篇文章一样，你点开了我觉得你的人品也不会很差，因为学计算机的人都比较爱分享，你能来到csdn看到我这篇感想类文章，并且尊重作者读到了结尾，我觉得你的人品也不会很差！</strong></p><h4 id="7、后续"><a href="#7、后续" class="headerlink" title="7、后续"></a>7、后续</h4><p>回头一看，不知不觉又写了好几千字，也算是对2020年第一次有感而发了，今年又是新的一年了，<strong><font color="red">祝观看到这里的你2020新年快乐，今年好运都“鼠”于我们！</font></strong> 本人今年也要找工作了，今年也会分享很多干货出来，做一个自己的成长记录，记录在❤心路历程❤专栏里面（就在我的分类专栏前几个就能看到），如果觉得不错的话，不妨点个赞关注一下~ 谢谢！</p><pre class=" language-javascript"><code class="language-javascript">学如逆水行舟，不进则退</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 心路历程❤ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完全免费的下载神器，这速度，还需要IDM吗？</title>
      <link href="/posts/60397.html"/>
      <url>/posts/60397.html</url>
      
        <content type="html"><![CDATA[<p><strong><font color="chocolate">NDM（Neat Download Manager）</font></strong></p><font color="chocolate"><a id="more"></a><p>NDM是一款完全免费的多线程下载工具，他支持多种网络下载协议，最大连接数同样支持32线程。（在Setting里面修改即可）</p><p><img src="https://img-blog.csdnimg.cn/20200111000441600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>另外，这款软件的体积仅有：850kb，连1MB都不足。这点就可以看出这款是多么的简洁，但这并不意味着他的功能少。</p><p>最后附上下载链接：</p><p>链接：<a href="https://pan.baidu.com/s/14U0Tswd0sUbLeo21iK46YA" target="_blank" rel="noopener">https://pan.baidu.com/s/14U0Tswd0sUbLeo21iK46YA</a><br>提取码：pkgk</p><pre class=" language-java"><code class="language-java">学如逆水行舟，不进则退</code></pre></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具安装 </tag>
            
            <tag> 黑科技 </tag>
            
            <tag> 下载神器 </tag>
            
            <tag> IDM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 网络课 智慧树自动刷课代码，自动跳转，自动答题并关闭弹窗，自动1.5倍速静音</title>
      <link href="/posts/39458.html"/>
      <url>/posts/39458.html</url>
      
        <content type="html"><![CDATA[<p><strong><font color="chocolate">刷课一时爽，一直刷课一直爽！</font></strong></p><p><strong><font color="DarkTurquoise">终于让我找到了这个黑客代码了，教程开始：</font></strong></p><a id="more"></a><p><strong><font color="FireBrick">只限谷歌浏览器和火狐浏览器使用，如果第一次失败，请重新试一下次</font></strong></p><font color="FireBrick"><p><strong><font coilor="LightCoral">将下面代码复制后，进入浏览器按F12键,先点击console 然后Ctrl+v复制代码 最后按回车键即可</font></strong></p><font coilor="LightCoral"><hr><pre class=" language-java"><code class="language-java">var ti <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var video <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">".catalogue_ul1 li[id*=video-]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>var v <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>video<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"blue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"已选取"</span> <span class="token operator">+</span> video<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token string">"个小节,并已用蓝色标明,请检查是否有遗漏,如有遗漏,概不负责"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    $<span class="token punctuation">(</span><span class="token string">'.speedTab15'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    $<span class="token punctuation">(</span><span class="token string">'.volumeIcon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"已进行静音和1.5倍加速"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ti<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"DOMNodeInserted"</span><span class="token punctuation">,</span> <span class="token function">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>textContent <span class="token operator">==</span> <span class="token string">"关闭"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"检测到第"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"个弹题窗口"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"tmDialog_iframe"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"answerOption"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            $<span class="token punctuation">(</span><span class="token string">".popbtn_cancel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"已关闭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        i<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>textContent <span class="token operator">==</span> <span class="token string">"本节视频,累计观看时间『100%』"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"检测到视频观看完成，准备跳到下一节"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $<span class="token punctuation">(</span><span class="token string">'.next_lesson_bg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"已跳转"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            $<span class="token punctuation">(</span><span class="token string">'.volumeIcon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            $<span class="token punctuation">(</span><span class="token string">'.speedTab15'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"已进行静音和1.5倍加速"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v<span class="token operator">++</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"目前播放了"</span> <span class="token operator">+</span> v <span class="token operator">+</span> <span class="token string">"个视频"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong><font color="LightCoral">效果图</font></strong></p><font color="LightCoral"><hr><p><img src="https://img-blog.csdnimg.cn/20191105215416824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><p><strong><font coilor="LightCoral">上面代码更加稳定，如果实在不行，可以试用下面代码</font></strong></p><font coilor="LightCoral"><pre class=" language-java"><code class="language-java"> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"成功运行自动刷网课智慧树版"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var _it <span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 弹题修复</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  $<span class="token punctuation">(</span><span class="token string">".popboxes_close.tmui_txt_hidd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">closeQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>function <span class="token function">closeQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">clearInterval</span><span class="token punctuation">(</span>_it<span class="token punctuation">)</span><span class="token punctuation">;</span>  var t <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">".popboxes_close.tmui_txt_hidd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span> t<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    t<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span><span class="token punctuation">(</span> $<span class="token punctuation">(</span><span class="token string">".popboxes_close.tmui_txt_hidd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">closeQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>function <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 静音修复</span>  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>$<span class="token punctuation">(</span><span class="token string">".volumeBox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"volumeNone"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      $<span class="token punctuation">(</span><span class="token string">".volumeIcon"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"【提示】刷课程序已将视频静音"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  _it <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"【提示】刷课程序运行中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 关闭弹题</span>    <span class="token function">closeQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 判断清晰度调整为高清</span>    <span class="token comment" spellcheck="true">// if(!$(".line1bq").hasClass("active")){</span>    <span class="token comment" spellcheck="true">//   $(".line1bq").click();</span>    <span class="token comment" spellcheck="true">//   console.log("【提示】刷课程序已将清晰度调整为“标清”");</span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token comment" spellcheck="true">// 1.5倍速</span>     $<span class="token punctuation">(</span><span class="token string">".speedTab15"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 下一节课</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token string">"div.bigPlayButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"display: none;"</span> <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">(</span><span class="token string">".popboxes_close.tmui_txt_hidd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>      $<span class="token punctuation">(</span><span class="token string">"#nextBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><pre class=" language-java"><code class="language-java">学如逆水行舟，不进则已退</code></pre></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 黑科技 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑科技 </tag>
            
            <tag> 网络课 </tag>
            
            <tag> 刷课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【ACM刷题专题】这个假期一起来刷题把，刷完冲击区域赛，刷完拿不到奖随便打！</title>
      <link href="/posts/56193.html"/>
      <url>/posts/56193.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h4><p><code>持续更新中!</code>这个漫长的假期，对于acm爱好者来说，是提升自己的黄金时期，但是一个人做题往往效率不是很高，于是想了又想，想创建一个多人学习的平台及环境，这样既能让自己好好保持状态，也能让看到的人受到影响一起刷题！</p><a id="more"></a><hr><table><tbody><tr><td bgcolor="87CEFA"><font color="white" size="4">     必看提醒   </font></td></tr></tbody></table><p>所有的题我都会安排在 Vj 上，如果还在犹豫或者大家需要板子的话，推荐阅读这篇文章：<a href="https://blog.csdn.net/weixin_42429718/article/details/104091170" target="_blank" rel="noopener">2020 我把大学四年ACM模板分享了出来【总结】 ACMer一定要来看！</a></p><p>重要的事说三遍！！！</p><p><font size="5">先给这篇文章点赞再刷题！</font></p><font size="5"><p><font size="5">先给这篇文章点赞再刷题！</font></p><font size="5"><p><font size="5">先给这篇文章点赞再刷题！</font></p><font size="5"><p>制作不易，后期可能会考虑只有粉丝才可见，所以不妨关注一波，本人也是今天从零开始刷，本vj持续更新时间暂定两个月，会结合自己实际情况和访问量来变化时间。</p><p><font color="red" size="5">学如逆水行舟，不进则退！</font></p><font color="red" size="5"><table><tbody><tr><td bgcolor="87CEFA"><font color="white" size="4">     vj题目地址（持续更新中，欢迎来AK）   </font></td></tr></tbody></table><p><a href="https://vjudge.net/contest/355775#panel-problems" target="_blank" rel="noopener">【两个月刷题计划】专题一 简单搜索</a></p><p><a href="https://vjudge.net/contest/355780#overview" target="_blank" rel="noopener">【两个月刷题计划】专题二 搜索进阶<br></a></p><hr><p><font color="chocolate" size="5">由于篇幅所限，题目地址改到这篇博客，望周知：</font></p><font color="chocolate" size="5"><p><a href="https://blog.csdn.net/weixin_42429718/article/details/104207758" target="_blank" rel="noopener">【acm专题分类】刷题计划 附题目地址 （两个月持续更新中）</a></p><h4 id="2、专题分享"><a href="#2、专题分享" class="headerlink" title="2、专题分享"></a>2、专题分享</h4><p>下面就是准备要公开为期两个月的题目专题，大家可以简单查阅一下，题目专题来自kuangbin专题，感谢大佬的分享！</p><h5 id="2-1-专题一-简单搜索"><a href="#2-1-专题一-简单搜索" class="headerlink" title="2.1 专题一 简单搜索"></a>2.1 专题一 简单搜索</h5><p>POJ 1321 棋盘问题<br>POJ 2251 Dungeon Master<br>POJ 3278 Catch That Cow<br>POJ 3279 Fliptile<br>POJ 1426 Find The Multiple<br>POJ 3126 Prime Path<br>POJ 3087 Shuffle’m Up<br>POJ 3414 Pots<br>FZU 2150 Fire Game<br>UVA 11624 Fire!<br>POJ 3984 迷宫问题<br>HDU 1241 Oil Deposits<br>HDU 1495 非常可乐<br>HDU 2612 Find a way</p><h5 id="2-2-专题二-搜索进阶"><a href="#2-2-专题二-搜索进阶" class="headerlink" title="2.2 专题二 搜索进阶"></a>2.2 专题二 搜索进阶</h5><p>HDU 1043 Eight<br>HDU 3567 Eight II<br>HDU 2181 哈密顿绕行世界问题<br>HDU 3533 Escape<br>HDU 1560 DNA sequence<br>ZOJ 2477 Magic Cube<br>HDU 3085 Nightmare Ⅱ<br>HDU 1067 Gap<br>HDU 2102 A计划<br>HDU 3001 Travelling</p><h5 id="2-3-专题三-Dancing-Links舞蹈链"><a href="#2-3-专题三-Dancing-Links舞蹈链" class="headerlink" title="2.3 专题三 Dancing Links舞蹈链"></a>2.3 专题三 Dancing Links舞蹈链</h5><p>HUST 1017 Exact cover<br>ZOJ 3209 Treasure Map<br>HDU 2295 Radar<br>FZU 1686 神龙的难题<br>POJ 1084 Square Destroyer<br>POJ 3074 Sudoku<br>ZOJ 3122 Sudoku<br>HDU 4069 Squiggly Sudoku<br>HDU 3335 Divisibility<br>HDU 4979 A simple math problem.<br>HDU 5046 Airport</p><h5 id="2-4-专题四-最短路练习"><a href="#2-4-专题四-最短路练习" class="headerlink" title="2.4 专题四 最短路练习"></a>2.4 专题四 最短路练习</h5><p>POJ 2387 Til the Cows Come Home<br>POJ 2253 Frogger<br>POJ 1797 Heavy Transportation<br>POJ 3268 Silver Cow Party<br>POJ 1860 Currency Exchange<br>POJ 3259 Wormholes<br>POJ 1502 MPI Maelstrom<br>POJ 3660 Cow Contest<br>POJ 2240 Arbitrage<br>POJ 1511 Invitation Cards<br>POJ 3159 Candies<br>POJ 2502 Subway<br>POJ 1062 昂贵的聘礼<br>POJ 1847 Tram<br>LightOJ 1074 Extended Traffic<br>HDU 4725 The Shortest Path in Nya Graph<br>HDU 3416 Marriage Match IV<br>HDU 4370 0 or 1<br>POJ 3169 Layout</p><h5 id="2-5-专题五-并查集"><a href="#2-5-专题五-并查集" class="headerlink" title="2.5 专题五 并查集"></a>2.5 专题五 并查集</h5><p>POJ 2236 Wireless Network<br>POJ 1611 The Suspects<br>HDU 1213 How Many Tables<br>HDU 3038 How Many Answers Are Wrong<br>POJ 1182 食物链<br>POJ 1417 True Liars<br>POJ 1456 Supermarket<br>POJ 1733 Parity game<br>POJ 1984 Navigation Nightmare<br>POJ 2492 A Bug’s Life<br>POJ 2912 Rochambeau<br>ZOJ 3261 Connections in Galaxy War<br>HDU 1272 小希的迷宫<br>POJ 1308 Is It A Tree?</p><h5 id="2-6-专题六-最小生成树"><a href="#2-6-专题六-最小生成树" class="headerlink" title="2.6 专题六 最小生成树"></a>2.6 专题六 最小生成树</h5><p>POJ 1251 Jungle Roads<br>POJ 1287 Networking<br>POJ 2031 Building a Space Station<br>POJ 2421 Constructing Roads<br>ZOJ 1586 QS Network<br>POJ 1789 Truck History<br>POJ 2349 Arctic Network<br>POJ 1751 Highways<br>POJ 1258 Agri-Net<br>POJ 3026 Borg Maze<br>POJ 1679 The Unique MST<br>HDU 1233 还是畅通工程<br>HDU 1301 Jungle Roads<br>HDU 1875 畅通工程再续</p><h5 id="2-7专题七-线段树"><a href="#2-7专题七-线段树" class="headerlink" title="2.7专题七 线段树"></a>2.7专题七 线段树</h5><p>HDU 1166 敌兵布阵<br>HDU 1754 I Hate It<br>POJ 3468 A Simple Problem with Integers<br>POJ 2528 Mayor’s posters<br>HDU 1698 Just a Hook<br>ZOJ 1610 Count the Colors<br>POJ 3264 Balanced Lineup<br>HDU 4027 Can you answer these queries?<br>HDU 1540 Tunnel Warfare<br>HDU 3974 Assign the task<br>HDU 4578 Transformation<br>HDU 4614 Vases and Flowers<br>HDU 4553 约会安排<br>POJ 1177 Picture<br>HDU 1255 覆盖的面积<br>HDU 1542 Atlantis<br>HDU 3642 Get The Treasury</p><h5 id="2-8-专题八-生成树"><a href="#2-8-专题八-生成树" class="headerlink" title="2.8 专题八 生成树"></a>2.8 专题八 生成树</h5><p>POJ 1679 The Unique MST<br>HDU 4081 Qin Shi Huang’s National Road System<br>UVA 10600 ACM Contest and Blackout<br>UVA 10462 Is There A Second Way Left?<br>POJ 3164 Command Network<br>UVA 11183 Teen Girl Squad<br>HDU 2121 Ice_cream’s world II<br>HDU 4009 Transfer water<br>UVA 10766 Organising the Organisation<br>SPOJ DETER3 Find The Determinant III<br>URAL 1627 Join<br>HDU 4305 Lightning<br>HDU 4408 Minimum Spanning Tree<br>SPOJ HIGH Highways</p><h5 id="2-9-专题九-连通图"><a href="#2-9-专题九-连通图" class="headerlink" title="2.9 专题九 连通图"></a>2.9 专题九 连通图</h5><p>POJ 1236 Network of Schools<br>UVA 315 Network<br>UVA 796 Critical Links<br>POJ 3694 Network<br>POJ 3177 Redundant Paths<br>HDU 4612 Warm up<br>HDU 4635 Strongly connected<br>HDU 4685 Prince and Princess<br>HDU 4738 Caocao’s Bridges</p><h5 id="2-10-专题十-匹配问题"><a href="#2-10-专题十-匹配问题" class="headerlink" title="2.10 专题十 匹配问题"></a>2.10 专题十 匹配问题</h5><p>HDU 1045 Fire Net<br>HDU 2444 The Accomodation of Students<br>HDU 1083 Courses<br>HDU 1281 棋盘游戏<br>HDU 2819 Swap<br>HDU 2389 Rain on your Parade<br>HDU 4185 Oil Skimming<br>POJ 3020 Antenna Placement<br>HDU 1054 Strategic Game<br>HDU 1151 Air Raid<br>POJ 2594 Treasure Exploration<br>HDU 3829 Cat VS Dog<br>POJ 2289 Jamie’s Contact Groups<br>POJ 2112 Optimal Milking<br>POJ 3189 Steady Cow Assignment<br>HDU 2255 奔小康赚大钱<br>HDU 3488 Tour<br>URAL 1099 Work Scheduling<br>HDU 4687 Boke and Tsukkomi</p><h5 id="2-11-专题十一-网络流"><a href="#2-11-专题十一-网络流" class="headerlink" title="2.11 专题十一 网络流"></a>2.11 专题十一 网络流</h5><p>POJ 3436 ACM Computer Factory<br>POJ 3281 Dining<br>POJ 1087 A Plug for UNIX<br>POJ 2195 Going Home<br>POJ 2516 Minimum Cost<br>POJ 1459 Power Network<br>HDU 4280 Island Transport<br>HDU 4292 Food<br>HDU 4289 Control<br>UVA 10480 Sabotage<br>HDU 2732 Leapin’ Lizards<br>HDU 3338 Kakuro Extension<br>HDU 3605 Escape<br>HDU 3081 Marriage Match II<br>HDU 3416 Marriage Match IV</p><h5 id="2-12-专题十二-基础DP1"><a href="#2-12-专题十二-基础DP1" class="headerlink" title="2.12 专题十二 基础DP1"></a>2.12 专题十二 基础DP1</h5><p>HDU 1024 Max Sum Plus Plus<br>HDU 1029 Ignatius and the Princess IV<br>HDU 1069 Monkey and Banana<br>HDU 1074 Doing Homework<br>HDU 1087 Super Jumping! Jumping! Jumping!<br>HDU 1114 Piggy-Bank<br>HDU 1176 免费馅饼<br>HDU 1260 Tickets<br>HDU 1257 最少拦截系统<br>HDU 1160 FatMouse’s Speed<br>POJ 1015 Jury Compromise<br>POJ 1458 Common Subsequence<br>POJ 1661 Help Jimmy<br>POJ 2533 Longest Ordered Subsequence<br>POJ 3186 Treats for the Cows<br>HDU 1078 FatMouse and Cheese<br>HDU 2859 Phalanx<br>POJ 3616 Milking Time<br>POJ 3666 Making the Grade</p><h5 id="2-13-专题十三-基础计算几何"><a href="#2-13-专题十三-基础计算几何" class="headerlink" title="2.13 专题十三 基础计算几何"></a>2.13 专题十三 基础计算几何</h5><p>POJ 2318 TOYS<br>POJ 2398 Toy Storage<br>POJ 3304 Segments<br>POJ 1269 Intersecting Lines<br>POJ 1556 The Doors<br>POJ 2653 Pick-up sticks<br>POJ 1066 Treasure Hunt<br>POJ 1410 Intersection<br>POJ 1696 Space Ant<br>POJ 3347 Kadj Squares<br>POJ 2826 An Easy Problem?!<br>POJ 1039 Pipe<br>POJ 3449 Geometric Shapes<br>POJ 1584 A Round Peg in a Ground Hole</p><h5 id="2-14-专题十四-数论基础"><a href="#2-14-专题十四-数论基础" class="headerlink" title="2.14 专题十四 数论基础"></a>2.14 专题十四 数论基础</h5><p>LightOJ 1370 Bi-shoe and Phi-shoe<br>LightOJ 1356 Prime Independence<br>LightOJ 1341 Aladdin and the Flying Carpet<br>LightOJ 1336 Sigma Function<br>LightOJ 1282 Leading and Trailing<br>LightOJ 1259 Goldbach`s Conjecture<br>LightOJ 1245 Harmonic Number (II)<br>LightOJ 1236 Pairs Forming LCM<br>LightOJ 1234 Harmonic Number<br>LightOJ 1220 Mysterious Bacteria<br>LightOJ 1214 Large Division<br>LightOJ 1213 Fantasy of a Summation<br>LightOJ 1197 Help Hanzo<br>LightOJ 1138 Trailing Zeroes (III)<br>UVA 11426 GCD - Extreme (II)<br>UVA 11754 Code Feat<br>UVA 11916 Emoogle Grid<br>POJ 1061 青蛙的约会<br>POJ 2115 C Looooops<br>POJ 2116 Death to Binary?<br>HDU 2161 Primes<br>UVA 11827 Maximum GCD<br>UVA 10200 Prime Time<br>SGU 106 The equation<br>POJ 2478 Farey Sequence<br>UVA 11752 The Super Powers</p><h5 id="2-15-专题十五-数位DP"><a href="#2-15-专题十五-数位DP" class="headerlink" title="2.15 专题十五 数位DP"></a>2.15 专题十五 数位DP</h5><p>CodeForces 55D Beautiful numbers<br>HDU 4352 XHXJ’s LIS<br>HDU 2089 不要62<br>HDU 3555 Bomb<br>POJ 3252 Round Numbers<br>HDU 3709 Balanced Number<br>HDU 3652 B-number<br>HDU 4734 F(x)<br>ZOJ 3494 BCD Code<br>HDU 4507 吉哥系列故事――恨7不成妻<br>SPOJ BALNUM Balanced Numbers</p><h5 id="2-16-专题十六-KMP-amp-扩展KMP-amp-Manacher"><a href="#2-16-专题十六-KMP-amp-扩展KMP-amp-Manacher" class="headerlink" title="2.16 专题十六 KMP &amp; 扩展KMP &amp; Manacher"></a>2.16 专题十六 KMP &amp; 扩展KMP &amp; Manacher</h5><p>HDU 1711 Number Sequence<br>HDU 1686 Oulipo<br>HDU 2087 剪花布条<br>HDU 3746 Cyclic Nacklace<br>HDU 1358 Period<br>HUST 1010 The Minimum Length<br>POJ 2406 Power Strings<br>POJ 2752 Seek the Name, Seek the Fame<br>POJ 3080 Blue Jeans<br>HDU 2594 Simpsons’ Hidden Talents<br>HDU 3336 Count the string<br>HDU 4300 Clairewd’s message<br>HDU 1238 Substrings<br>HDU 2328 Corporate Identity<br>HDU 3374 String Problem<br>HDU 2609 How many<br>FZU 1901 Period II<br>POJ 3746 Teacher YYF<br>HDU 3613 Best Reward<br>POJ 3376 Finding Palindromes<br>POJ 3974 Palindrome<br>HDU 4513 吉哥系列故事――完美队形II<br>HDU 3294 Girls’ research<br>HDU 3068 最长回文<br>HDU 4847 Wow! Such Doge!<br>HDU 4763 Theme Section</p><h5 id="2-17-专题十七-AC自动机"><a href="#2-17-专题十七-AC自动机" class="headerlink" title="2.17 专题十七 AC自动机"></a>2.17 专题十七 AC自动机</h5><p>HDU 2222 Keywords Search<br>HDU 2896 病毒侵袭<br>HDU 3065 病毒侵袭持续中<br>ZOJ 3430 Detect the Virus<br>POJ 2778 DNA Sequence<br>HDU 2243 考研路茫茫――单词情结<br>POJ 1625 Censored!<br>HDU 2825 Wireless Password<br>HDU 2296 Ring<br>HDU 2457 DNA repair<br>ZOJ 3228 Searching the String<br>HDU 3341 Lost’s revenge<br>HDU 3247 Resource Archiver<br>ZOJ 3494 BCD Code<br>HDU 4758 Walk Through Squares<br>HDU 4511 小明系列故事――女友的考验</p><h5 id="2-18-专题十八-后缀数组"><a href="#2-18-专题十八-后缀数组" class="headerlink" title="2.18 专题十八 后缀数组"></a>2.18 专题十八 后缀数组</h5><p>POJ 1743 Musical Theme<br>POJ 3261 Milk Patterns<br>SPOJ DISUBSTR Distinct Substrings<br>SPOJ SUBST1 New Distinct Substrings<br>POJ 2406 Power Strings<br>SPOJ REPEATS Repeats<br>POJ 3693 Maximum repetition substring<br>POJ 2774 Long Long Message<br>POJ 3415 Common Substrings<br>POJ 3294 Life Forms<br>SPOJ PHRASES Relevant Phrases of Annihilation<br>POJ 1226 Substrings<br>UVA 11475 Extend to Palindrome<br>POJ 3581 Sequence<br>POJ 3450 Corporate Identity<br>POJ 3080 Blue Jeans<br>POJ 2758 Checking the Text</p><h5 id="2-19-专题十九-矩阵"><a href="#2-19-专题十九-矩阵" class="headerlink" title="2.19 专题十九 矩阵"></a>2.19 专题十九 矩阵</h5><p>CodeForces 450B Jzzhu and Sequences<br>HDU 5015 233 Matrix<br>HDU 4990 Reading comprehension<br>UVA 11651 Krypton Number System<br>HDU 4965 Fast Matrix Calculation<br>UVA 11551 Experienced Endeavour<br>UVA 10689 Yet another Number Sequence<br>UVA 11149 Power of Matrix<br>UVA 10655 Contemplation! Algebra<br>UVA 1386 Cellular Automaton<br>UVA 10870 Recurrences<br>UVA 11885 Number of Battlefields<br>HDU 4565 So Easy!<br>CodeForces 392C Yet Another Number Sequence<br>CodeForces 385E Bear in the Field<br>FZU 1911 Construct a Matrix<br>UVA 10518 How Many Calls?<br>HDU 4549 M斐波那契数列<br>HDU 4686 Arc of Dream</p><h5 id="2-20-专题二十-斜率DP"><a href="#2-20-专题二十-斜率DP" class="headerlink" title="2.20 专题二十 斜率DP"></a>2.20 专题二十 斜率DP</h5><p>HDU 3507 Print Article<br>HDU 2829 Lawrence<br>HDU 4528 小明系列故事――捉迷藏<br>HDU 1300 Pearls<br>HDU 2993 MAX Average Problem<br>UVALive 5097 Cross the Wall<br>HDU 3045 Picnic Cows<br>HDU 3516 Tree Construction<br>POJ 1160 Post Office<br>POJ 1180 Batch Scheduling<br>POJ 2018 Best Cow Fences<br>POJ 3709 K-Anonymous Sequence<br>POJ 2841 Navigation Game<br>POJ 1260 Pearls<br>UVA 12594 Naming Babies<br>HDU 3480 Division<br>UVALive 6771 Buffed Buffet</p><h5 id="2-21-专题二十一-概率-amp-期望"><a href="#2-21-专题二十一-概率-amp-期望" class="headerlink" title="2.21 专题二十一 概率&amp;期望"></a>2.21 专题二十一 概率&amp;期望</h5><p>LightOJ 1027 A Dangerous Maze<br>LightOJ 1030 Discovering Gold<br>LightOJ 1038 Race to 1 Again<br>LightOJ 1079 Just another Robbery<br>LightOJ 1104 Birthday Paradox<br>LightOJ 1151 Snakes and Ladders<br>LightOJ 1248 Dice (III)<br>LightOJ 1265 Island of Survival<br>LightOJ 1274 Beating the Dataset<br>LightOJ 1284 Lights inside 3D Grid<br>LightOJ 1287 Where to Run<br>LightOJ 1317 Throwing Balls into the Baskets<br>LightOJ 1321 Sending Packets<br>LightOJ 1342 Aladdin and the Magical Sticks<br>LightOJ 1364 Expected Cards<br>LightOJ 1395 A Dangerous Maze (II)<br>LightOJ 1408 Batting Practice</p><h5 id="2-22-专题二十二-区间DP"><a href="#2-22-专题二十二-区间DP" class="headerlink" title="2.22 专题二十二 区间DP"></a>2.22 专题二十二 区间DP</h5><p>ZOJ 3537 Cake<br>LightOJ 1422 Halloween Costumes<br>POJ 2955 Brackets<br>CodeForces 149D Coloring Brackets<br>POJ 1651 Multiplication Puzzle<br>ZOJ 3469 Food Delivery<br>HDU 4283 You Are the One<br>HDU 2476 String painter</p><h5 id="2-23-专题二十三-计算几何之半平面交"><a href="#2-23-专题二十三-计算几何之半平面交" class="headerlink" title="2.23 专题二十三 计算几何之半平面交"></a>2.23 专题二十三 计算几何之半平面交</h5><p>POJ 3335 Rotating Scoreboard<br>POJ 3130 How I Mathematician Wonder What You Are!<br>POJ 1474 Video Surveillance<br>POJ 1279 Art Gallery<br>POJ 3525 Most Distant Point from the Sea<br>POJ 3384 Feng Shui<br>POJ 1755 Triathlon<br>POJ 2540 Hotter Colder<br>POJ 2451 Uyuw’s Concert<br>POJ 1271 Nice Milk<br>UVA 11722 Joining with Friend<br>UVA 11722 he Sea<br>UVALive 7295 Positive Con Sequences<br>UVALive 7292 Refract Facts<br>UVALive 7297 Hounded by Indecision<br>UVALive 7346 Avoiding an Arrrgument<br>UVALive 7521 Kinfolk<br>UVALive 7347 Of the Children<br>UVALive 7348 Talking About Numbers<br>UVALive 7349 The Scheming Gardener<br>LightOJ 1433 Minimum Arc Distance<br>LightOJ 1387 Setu<br>LightOJ 1338 Hidden Secret!<br>LightOJ 1261 K-SAT Problem<br>LightOJ 1249 Chocolate Thief</p><hr><h4 id="3、专题过后训练"><a href="#3、专题过后训练" class="headerlink" title="3、专题过后训练"></a>3、专题过后训练</h4><h5 id="训练一——图论一"><a href="#训练一——图论一" class="headerlink" title="训练一——图论一"></a>训练一——图论一</h5><p>LightOJ 1251 Forming the Council<br>LightOJ 1026 Critical Links<br>LightOJ 1063 Ant Hills<br>LightOJ 1291 Real Life Traffic<br>LightOJ 1308 Ant Network<br>LightOJ 1074 Extended Traffic<br>LightOJ 1108 Instant View of Big Bang<br>LightOJ 1221 Travel Company<br>LightOJ 1002 Country Roads<br>LightOJ 1029 Civil and Evil Engineer<br>LightOJ 1040 Donation<br>LightOJ 1041 Road Construction<br>LightOJ 1059 Air Ports<br>LightOJ 1123 Trail Maintenance<br>LightOJ 1124 Cricket Ranking<br>LightOJ 1380 Teleport<br>LightOJ 1384 Stream My Contest<br>LightOJ 1348 Aladdin and the Return Journey<br>LightOJ 1250 Village Postman<br>LightOJ 1256 Word Puzzle<br>LightOJ 1003 Drunk</p><h5 id="训练二——图论二-匹配和网络流"><a href="#训练二——图论二-匹配和网络流" class="headerlink" title="训练二——图论二(匹配和网络流)"></a>训练二——图论二(匹配和网络流)</h5><p>LightOJ 1149 Factors and Multiples<br>LightOJ 1150 Ghosts!<br>LightOJ 1152 Hiding Gold<br>LightOJ 1429 Assassin`s Creed (II)<br>LightOJ 1171 Knights in Chessboard (II)<br>LightOJ 1356 Prime Independence<br>LightOJ 1153 Internet Bandwidth<br>LightOJ 1154 Penguins<br>LightOJ 1155 Power Transmission<br>LightOJ 1156 Jumping Frogs<br>LightOJ 1167 Dangerous Tunnels<br>LightOJ 1176 Getting a T-shirt<br>LightOJ 1177 Angry Programmer<br>LightOJ 1330 Binary Matrix<br>LightOJ 1405 The Great Escape<br>LightOJ 1071 Baker Vai<br>LightOJ 1222 Gift Packing<br>LightOJ 1237 Cyber Cafe<br>LightOJ 1243 Guardian Knights<br>LightOJ 1290 The Great Merger<br>LightOJ 1198 Karate Competition<br>LightOJ 1431 The Party for the Rich</p><h5 id="训练三——字符串"><a href="#训练三——字符串" class="headerlink" title="训练三——字符串"></a>训练三——字符串</h5><p>LightOJ 1427 Substring Frequency (II)<br>LightOJ 1258 Making Huge Palindromes<br>LightOJ 1268 Unlucky Strings<br>LightOJ 1334 Genes in DNA<br>LightOJ 1428 Melody Comparison<br>LightOJ 1314 Names for Babies<br>LightOJ 1347 Aladdin and the Magical Lamp</p><h5 id="训练四——计算几何"><a href="#训练四——计算几何" class="headerlink" title="训练四——计算几何"></a>训练四——计算几何</h5><p>LightOJ 1056 Olympics<br>LightOJ 1062 Crossed Ladders<br>LightOJ 1130 Intersection between Circle and Rectangle<br>LightOJ 1137 Expanding Rods<br>LightOJ 1190 Sleepwalking<br>LightOJ 1208 Dangerous Bull! Who Wants to Pull?<br>LightOJ 1260 Race Track<br>LightOJ 1292 Laser Shot<br>LightOJ 1320 Farmers` Tale<br>LightOJ 1346 Aladdin and the Rocky Mountains<br>LightOJ 1358 Fukushima Nuclear Blast<br>LightOJ 1432 Overlapping Sticks<br>LightOJ 1203 Guarding Bananas<br>LightOJ 1239 Convex Fence<br>LightOJ 1285 Drawing Simple Polygon<br>LightOJ 1313 Protect the Mines<br>LightOJ 1418 Trees on My Island</p><h5 id="SHU训练五——矩阵"><a href="#SHU训练五——矩阵" class="headerlink" title="SHU训练五——矩阵"></a>SHU训练五——矩阵</h5><p>LightOJ 1151 Snakes and Ladders<br>LightOJ 1272 Maximum Subset Sum<br>LightOJ 1279 Graph Coloring<br>LightOJ 1288 Subsets Forming Perfect Squares<br>LightOJ 1052 String Growth<br>LightOJ 1065 Number Sequence<br>LightOJ 1070 Algebraic Problem<br>LightOJ 1131 Just Two Functions<br>LightOJ 1132 Summing up Powers<br>LightOJ 1142 Summing up Powers (II)<br>LightOJ 1160 Discovering Paths in Grid<br>LightOJ 1172 Krypton Number System<br>LightOJ 1244 Tiles<br>LightOJ 1268 Unlucky Strings<br>LightOJ 1332 Kings in Chessboard<br>LightOJ 1376 Tetromino</p><h5 id="SHU训练六——博弈"><a href="#SHU训练六——博弈" class="headerlink" title="SHU训练六——博弈"></a>SHU训练六——博弈</h5><p>LightOJ 1355 Game of CS<br>LightOJ 1186 Incredible Chess<br>LightOJ 1192 Left Right<br>LightOJ 1247 Matrix Game<br>LightOJ 1253 Misere Nim<br>LightOJ 1393 Crazy Calendar<br>LightOJ 1199 Partitioning Game<br>LightOJ 1229 Treblecross<br>LightOJ 1296 Again Stone Game<br>LightOJ 1315 Game of Hyper Knights<br>LightOJ 1344 Aladdin and the Game of Bracelets<br>LightOJ 1401 No More Tic-tac-toe</p><h5 id="SHU训练七——数论"><a href="#SHU训练七——数论" class="headerlink" title="SHU训练七——数论"></a>SHU训练七——数论</h5><p>LightOJ 1007 Mathematically Hard<br>LightOJ 1024 Eid<br>LightOJ 1028 Trailing Zeroes (I)<br>LightOJ 1035 Intelligent Factorial Factorization<br>LightOJ 1045 Digits of Factorial<br>LightOJ 1067 Combinations<br>LightOJ 1077 How Many Points?<br>LightOJ 1090 Trailing Zeroes (II)<br>LightOJ 1098 A New Function<br>LightOJ 1109 False Ordering<br>LightOJ 1138 Trailing Zeroes (III)<br>LightOJ 1163 Bank Robbery<br>LightOJ 1197 Help Hanzo<br>LightOJ 1213 Fantasy of a Summation<br>LightOJ 1214 Large Division<br>LightOJ 1215 Finding LCM<br>LightOJ 1220 Mysterious Bacteria<br>LightOJ 1234 Harmonic Number<br>LightOJ 1236 Pairs Forming LCM<br>LightOJ 1245 Harmonic Number (II)<br>LightOJ 1259 Goldbach`s Conjecture<br>LightOJ 1278 Sum of Consecutive Integers</p><table><tbody><tr><td bgcolor="87CEFA"><font color="white" size="4">    还未结束，持续更新中...   </font></td></tr></tbody></table><h4 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h4><pre class=" language-cpp"><code class="language-cpp">学如逆水行舟，不进则退</code></pre></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 心路历程❤ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yelee主题 </tag>
            
            <tag> acm </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 这或许是程序员最真实工作精神状态？</title>
      <link href="/posts/45472.html"/>
      <url>/posts/45472.html</url>
      
        <content type="html"><![CDATA[<h6>【1】程序员的一周穿搭<a id="more"></a><img src="https://img-blog.csdnimg.cn/20200125122600599.gif" width="30%" height="30%" align="center"></h6><h6>【2】这个问题我遇到过，小意思... <img src="https://img-blog.csdnimg.cn/20200125133554570.gif" width="35%" align="center"></h6><h6>【3】结对编程选了一个猪队友<img src="https://img-blog.csdnimg.cn/20200125133606132.gif" width="35%" align="center"></h6><h6>【4】原本只是想拆分模块、解耦 <img src="https://img-blog.csdnimg.cn/20200125133635298.gif" width="35%" align="center"></h6><h6>【5】程序员真实工作精神状态<img src="https://img-blog.csdnimg.cn/20200125133804385.gif" width="35%" align="center"></h6><h6>【6】找好工作准备跳槽的你<img src="https://img-blog.csdnimg.cn/20200125133749150.gif" width="35%" align="center"></h6><h6>【7】下一站科技软件园，请给有需要的程序员让个座 <img align="center" src="https://img-blog.csdnimg.cn/20200125121326915.gif" width="35%" height="30%"></h6><h6>【8】程序员简历中的自己 <img src="https://img-blog.csdnimg.cn/20200125133712157.gif" width="35%" align="center"></h6><h6>【9】当我遇到一个可重现的错误时 <img src="https://img-blog.csdnimg.cn/20200125133649356.gif" width="35%" align="center"></h6><h6>【10】想早退，被领导发现了 <img src="https://img-blog.csdnimg.cn/20200125133730262.gif" width="35%" align="center"></h6><h6>【11】当实习生修复一个Bug的时候 <img src="https://img-blog.csdnimg.cn/2020012513373292.gif" width="35%" align="center"><pre class=" language-javascript"><code class="language-javascript">学如逆水行舟，不进则退</code></pre></h6><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 心路历程❤ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 零基础教宝塔面板MySQL通过Navicat连接数据库 【整理】</title>
      <link href="/posts/1775.html"/>
      <url>/posts/1775.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h4><p>在2020年前购买了阿里云服务器，但是一直没啥时间去折腾，今天抽了点空，先来连一下Navicat配置一下后端</p><a id="more"></a><h4 id="2、详细过程"><a href="#2、详细过程" class="headerlink" title="2、详细过程"></a>2、详细过程</h4><h6 id="第一步：打开阿里云服务器ECS，配置安全组放开3306端口，这里还要设置专有网络，按照它的提示做行了"><a href="#第一步：打开阿里云服务器ECS，配置安全组放开3306端口，这里还要设置专有网络，按照它的提示做行了" class="headerlink" title="第一步：打开阿里云服务器ECS，配置安全组放开3306端口，这里还要设置专有网络，按照它的提示做行了"></a>第一步：打开阿里云服务器ECS，配置安全组放开3306端口，这里还要设置专有网络，按照它的提示做行了</h6><p><img src="https://img-blog.csdnimg.cn/20200109200124130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200109200146964.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200109201037963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="第二步：进入宝塔面板-找到安全这个菜单-然后按照下面输入3306端口-备注就随便写了（例如：打开MySQL端口）-放行端口3306"><a href="#第二步：进入宝塔面板-找到安全这个菜单-然后按照下面输入3306端口-备注就随便写了（例如：打开MySQL端口）-放行端口3306" class="headerlink" title="第二步：进入宝塔面板 找到安全这个菜单  然后按照下面输入3306端口 备注就随便写了（例如：打开MySQL端口） 放行端口3306"></a>第二步：进入宝塔面板 找到安全这个菜单  然后按照下面输入3306端口 备注就随便写了（例如：打开MySQL端口） 放行端口3306</h6><p><img src="https://img-blog.csdnimg.cn/20200109201132707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="第三步：-进入宝塔面板-选择数据库这个菜单-设置我们的数据库访问权限为所有人（省去权限问题）"><a href="#第三步：-进入宝塔面板-选择数据库这个菜单-设置我们的数据库访问权限为所有人（省去权限问题）" class="headerlink" title="第三步： 进入宝塔面板  选择数据库这个菜单  设置我们的数据库访问权限为所有人（省去权限问题）"></a>第三步： 进入宝塔面板  选择数据库这个菜单  设置我们的数据库访问权限为所有人（省去权限问题）</h6><p><img src="https://img-blog.csdnimg.cn/20200109201215941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="第四步：打开Naviact-准备连接Mysql-输入你在面板里面设置的相关信息-然后输入主机IP地址-就可以成功连接了"><a href="#第四步：打开Naviact-准备连接Mysql-输入你在面板里面设置的相关信息-然后输入主机IP地址-就可以成功连接了" class="headerlink" title="第四步：打开Naviact 准备连接Mysql  输入你在面板里面设置的相关信息 然后输入主机IP地址 就可以成功连接了"></a>第四步：打开Naviact 准备连接Mysql  输入你在面板里面设置的相关信息 然后输入主机IP地址 就可以成功连接了</h6><p><img src="https://img-blog.csdnimg.cn/20200109202328103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200109202344647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h6 id="第五步：最后就是我们成功连接图了"><a href="#第五步：最后就是我们成功连接图了" class="headerlink" title="第五步：最后就是我们成功连接图了~"></a>第五步：最后就是我们成功连接图了~</h6><p><img src="https://img-blog.csdnimg.cn/20200109202407749.png" alt="在这里插入图片描述"></p><h4 id="3、结束语"><a href="#3、结束语" class="headerlink" title="3、结束语"></a>3、结束语</h4><p>遇到问题保持冷静慢慢来即可，这是一个学习的过程，MySQL配置完毕，后续还会更新项目方面~</p><pre class=" language-java"><code class="language-java">学如逆水行舟，不进则退</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> Navicat </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【超详细】基于 Docker搭建 WordPress动态博客（一行命令搭建博客系统）</title>
      <link href="/posts/15929.html"/>
      <url>/posts/15929.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>首先，我们来谈一谈 Docker ，它是企业及开发和运维用的极其火热、非常广泛的一种虚拟化技术  <code>Doker容器</code> 类似于虚拟机 ，但是比虚拟机轻量得多，而且提供进程级别的隔离，待会会展示 Docker技术在环境搭建方面的优势</p><blockquote><p>如果想了解多一点关于Doker知识，推荐阅读以下博客<br><br><a href="https://blog.csdn.net/weixin_42429718/article/details/104187065" target="_blank" rel="noopener">推荐阅读：【超详细】通俗易懂地理解并使用Docker（上）</a><br><br><a href="https://blog.csdn.net/weixin_42429718/article/details/104187112" target="_blank" rel="noopener">推荐阅读：【超详细】通俗易懂地理解并使用Docker（下）</a></p></blockquote><a id="more"></a><p>其次，我们来谈一谈WordPress 是基于php语言写的动态博客系统，有许多博客或者CMS系统都是基于它来改造的</p><p><font color="red" size="4">本次项目仅需一行命令解决，你没看错，真一行命令搭建动态博客系统！</font></p><h4 id="1-准备工作（白嫖党可以直接跳到第3步获取地址）"><a href="#1-准备工作（白嫖党可以直接跳到第3步获取地址）" class="headerlink" title="1. 准备工作（白嫖党可以直接跳到第3步获取地址）"></a>1. 准备工作（白嫖党可以直接跳到第3步获取地址）</h4><p>1、去百度搜索菜鸟教程，然后再官网搜索Docker</p><p><img src="https://img-blog.csdnimg.cn/2020020911592554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2、找到关于Docker教程</p><p><img src="https://img-blog.csdnimg.cn/20200209120008811.png" alt="在这里插入图片描述"><br>3、找到属于你自己本机系统的安装教程，按照上面步骤安装即可</p><p><a href="https://www.runoob.com/docker/windows-docker-install.html" target="_blank" rel="noopener">点击跳转——Windows Docker 安装地址</a></p><p><strong>如果你也是win10家庭版，然后出现安装不了的问题，推荐阅读以下博客：</strong></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/104237671" target="_blank" rel="noopener">win10家庭版安装 Docker for Windows（解决win10没有Hyper-V问题）</a></p><h4 id="2-安装：搭建博客"><a href="#2-安装：搭建博客" class="headerlink" title="2. 安装：搭建博客"></a>2. 安装：搭建博客</h4><p><font color="red" size="5">下面就是一行代码装ac的时候了！</font></p><font color="red" size="5"><p>首先，创建一个文件夹，然后放入一个<strong>特别重要</strong>的文件：<code>docker-compose.yml</code></p><p><font color="chocolate" size="4">制作不易，如果需要文件，请为这篇文章点赞然后关注一下博主，感谢您的支持！</font></p><font color="chocolate" size="4"><p><a href="https://blog.csdn.net/weixin_42429718/article/details/104237596" target="_blank" rel="noopener">【所需文件：docker-compose.yml】（仅粉丝可见）</a><br><img src="https://img-blog.csdnimg.cn/20200209165027436.png" alt="在这里插入图片描述"><br>然后打开cmd 通过cd进入当前有这个文件的文件夹，输入以下一行命令</p><pre class=" language-cpp"><code class="language-cpp">docker<span class="token operator">-</span>compose up <span class="token operator">-</span>d</code></pre><p>等待片刻，如果出现下面creating xxx 然后<font color="green">done</font>代表已经搭建完成了！<br><img src="https://img-blog.csdnimg.cn/20200209164832402.png" alt="在这里插入图片描述"></p><h4 id="3-进入博客网站"><a href="#3-进入博客网站" class="headerlink" title="3. 进入博客网站"></a>3. 进入博客网站</h4><p>打开浏览器，输入以下地址，进入我们的博客界面，接下来就是一些初始化工作了，按照流程做就可以了</p><pre class=" language-cpp"><code class="language-cpp">http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8000</span><span class="token operator">/</span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200209165316979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="4-后续"><a href="#4-后续" class="headerlink" title="4. 后续"></a>4. 后续</h4><p>进去后，里面初始化是英文的，我们也可以设置成为简体中文<br><img src="https://img-blog.csdnimg.cn/20200209165755819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><pre class=" language-cpp"><code class="language-cpp">学如逆水行舟，不进则退</code></pre></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Docker </tag>
            
            <tag> 工具安装 </tag>
            
            <tag> 黑科技 </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10家庭版安装 Docker for Windows</title>
      <link href="/posts/21654.html"/>
      <url>/posts/21654.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>之前在做那个一行代码搭建博客系统小项目时，需要安装Docker 环境，然后自己系统是win10家庭版的，不是专业版的，然后gg… 没办法开启Hyper-V，后面发现了神奇操作，可以把自己的win10伪装成专业版，话不多说，直接开始！</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/202002091237078.png" alt="在这里插入图片描述"></p><h4 id="1-开启Hyper-V"><a href="#1-开启Hyper-V" class="headerlink" title="1. 开启Hyper-V"></a>1. 开启Hyper-V</h4><p>新建<code>hyperv.cmd</code>文件，内容如下：</p><pre class=" language-cpp"><code class="language-cpp">pushd <span class="token string">"%~dp0"</span>dir <span class="token operator">/</span>b <span class="token operator">%</span>SystemRoot<span class="token operator">%</span>\servicing\Packages\<span class="token operator">*</span>Hyper<span class="token operator">-</span>V<span class="token operator">*</span><span class="token punctuation">.</span>mum <span class="token operator">></span>hyper<span class="token operator">-</span>v<span class="token punctuation">.</span>txt<span class="token keyword">for</span> <span class="token operator">/</span>f <span class="token operator">%</span><span class="token operator">%</span>i <span class="token function">in</span> <span class="token punctuation">(</span><span class="token string">'findstr /i . hyper-v.txt 2^>nul'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> dism <span class="token operator">/</span>online <span class="token operator">/</span>norestart <span class="token operator">/</span>add<span class="token operator">-</span>package<span class="token operator">:</span><span class="token string">"%SystemRoot%\servicing\Packages\%%i"</span>del hyper<span class="token operator">-</span>v<span class="token punctuation">.</span>txtDism <span class="token operator">/</span>online <span class="token operator">/</span>enable<span class="token operator">-</span>feature <span class="token operator">/</span>featurename<span class="token operator">:</span>Microsoft<span class="token operator">-</span>Hyper<span class="token operator">-</span>V<span class="token operator">-</span>All <span class="token operator">/</span>LimitAccess <span class="token operator">/</span>ALL</code></pre><p>以管理员身份执行<code>hyperv.cmd</code>文件。<br>如果系统要你重启，便重启。<br>在<code>控制面板-&gt;程序和功能-&gt;启用或关闭Windows</code>功能打开<code>Hyper-V</code>。</p><p><img src="https://img-blog.csdnimg.cn/20200209123223544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="2-伪装成win10专业版"><a href="#2-伪装成win10专业版" class="headerlink" title="2. 伪装成win10专业版"></a>2. 伪装成win10专业版</h4><p>以管理员身份打开cmd<br>执行如下命令：</p><pre class=" language-cpp"><code class="language-cpp">REG ADD <span class="token string">"HKEY_LOCAL_MACHINE\software\Microsoft\Windows NT\CurrentVersion"</span> <span class="token operator">/</span>v EditionId <span class="token operator">/</span>T REG_EXPAND_SZ <span class="token operator">/</span>d Professional <span class="token operator">/</span>F</code></pre><h4 id="3-下载Docker-for-Windows"><a href="#3-下载Docker-for-Windows" class="headerlink" title="3. 下载Docker for Windows"></a>3. 下载Docker for Windows</h4><p>国内镜像：<br><a href="https://oomake.com/download/docker-windows" target="_blank" rel="noopener">https://oomake.com/download/docker-windows</a> （百度网盘）<br><a href="https://mirrors.ustc.edu.cn/docker-ce/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/docker-ce/</a> （版本更新不及时）</p><p>下载后直接安装，安装时注意取消勾选window容器（默认不会勾选）。</p><p>Docker安装成功后，执行cmd命令<code>docker version</code>。</p><hr>当然，还有其他问题，不妨评论区留下你的问题，一起解决，顺便我也补充一下，谢谢啦！<br><p><font size="4" color="red">关于搭建Docker到此结束啦，觉得不错的话，麻烦点个赞！希望本篇博客对你有所帮助~</font></p><font size="4" color="red"><pre class=" language-cpp"><code class="language-cpp">学如逆水行舟，不进则退</code></pre></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 工具安装 </tag>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 零基础到快速开发  Vue全家桶开发电商管理系统（Element-UI）【目录】</title>
      <link href="/posts/28671.html"/>
      <url>/posts/28671.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h4><p>又是一个寒假，曾经一个学霸说过：<code>寒假是用来反超的！</code>，所以这个寒假来和我一起学习Vue把，我会把我做的全部整合在这一个目录当中，算是给自己一个学习记录，也方便读者进行查阅。我的项目其实在1月24日正好过除夕的那天完成了，大约是10天左右的时间，边记录边做项目，后面发现我这个专栏访问量达到了5w，还是有一点人气的，休息三天后，今晚打算来一个总结吧，见证一个从一个不认识Vue是什么的小白到如何快速开发的成长吧~</p><p><font color="red">项目源码我放在码云上保管了,具体地址如下，可进行二次开发:</font><br><a href="https://gitee.com/Chocolate666/vue_shop/tree/master" target="_blank" rel="noopener">https://gitee.com/Chocolate666/vue_shop/tree/master</a></p><a id="more"></a><h4 id="2、电商后台管理系统的技术选型"><a href="#2、电商后台管理系统的技术选型" class="headerlink" title="2、电商后台管理系统的技术选型"></a>2、电商后台管理系统的技术选型</h4><p>① 前端项目技术栈：</p><ul><li>Vue</li><li>Vue-router</li><li>Element-UI</li><li>Axios</li><li>Echarts</li></ul><p>② 后端项目</p><ul><li>Node.js</li><li>Express</li><li>Jwt</li><li>Mysql</li><li>Sequelize</li></ul><h4 id="3、快速入门篇"><a href="#3、快速入门篇" class="headerlink" title="3、快速入门篇"></a>3、快速入门篇</h4><blockquote><h6>本篇主要是给刚入门Vue的来学习的，里面有一些简单实例，比如记事本，所处城市天气查询，音乐播放配mv等，同时还解决了学习时遇到的问题，学会下面的内容可以算是入门了</h6></blockquote><ol><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103952917" target="_blank" rel="noopener">2020 零基础 Vue快速入门 Vue基础篇 【详细】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103957276" target="_blank" rel="noopener">2020 零基础 Vue快速入门 Vue指令 本地应用篇【整理】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103964103" target="_blank" rel="noopener">2020 零基础 Vue快速入门 教开发一个记事本（激发编程乐趣）【整理+源码】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103969483" target="_blank" rel="noopener">2020 零基础 Vue快速入门 Vue2.0使用ES6语法的箭头函数=&gt; 对this作用域的理解 【整理】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103969923" target="_blank" rel="noopener">2020 零基础 Vue快速入门 Vue项目中引入外部css以及js文件的方法 【整理】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103967761" target="_blank" rel="noopener">2020 零基础 Vue快速入门 网络应用 axios+Vue【整理】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103972240" target="_blank" rel="noopener">2020 零基础 Vue快速入门 教开发天气查询网页—天知道（激发编程乐趣）【整理+源码】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103974082" target="_blank" rel="noopener">2020 零基础 Vue综合应用 教开发音乐播放器—悦听（激发编程乐趣）【整理+源码】</a></li></ol><h4 id="4、电商管理系统开发（百科全书）"><a href="#4、电商管理系统开发（百科全书）" class="headerlink" title="4、电商管理系统开发（百科全书）"></a>4、电商管理系统开发（百科全书）</h4><ol><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103983409" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）项目概述篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103983723" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）项目初始化篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103990497" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）使用码云托管项目篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103995613" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）配置MySQL</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/103996682" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）登录退出功能实现</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104012018" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）主页布局开发</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104018448" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）用户列表开发</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104023786" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【添加用户】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104024379" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【修改用户】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104031033" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【删除用户】</a> </li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104031835" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【权限列表】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104033075" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【角色列表】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104044038" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【分配权限】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104044630" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）【分配角色】</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104045709" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）商品分类篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104056728" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）分类参数篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104063899" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）商品列表篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104077321" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）订单管理篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104078211" target="_blank" rel="noopener">2020 零基础到快速开发 Vue全家桶开发电商管理系统（Element-UI）数据统计篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104079409" target="_blank" rel="noopener">2020 Vue零基础 基于Element-UI开发 （全）项目优化与部署上线（npm，基于vue ui） 上篇</a></li><li><a href="https://blog.csdn.net/weixin_42429718/article/details/104079909" target="_blank" rel="noopener">2020 Vue零基础 基于Element-UI开发 （全）项目优化与部署上线（npm，基于vue ui） 下篇</a></li></ol><h4 id="5、结束语"><a href="#5、结束语" class="headerlink" title="5、结束语"></a>5、结束语</h4><hr><p><strong><font color="DeepPink">最后，看完本篇博客后，觉得挺有帮助的话，可以继续查看专栏其它内容嗷，一起来学习Vue吧~</font></strong><br><img src="https://img-blog.csdnimg.cn/2020011511203890.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="点击进入Vue❤学习专栏"><a href="#点击进入Vue❤学习专栏" class="headerlink" title=" 点击进入Vue❤学习专栏~"></a><a href="https://blog.csdn.net/weixin_42429718/category_9656024.html" target="_blank" rel="noopener"> 点击进入Vue❤学习专栏~</a></h4><pre class=" language-javascript"><code class="language-javascript">学如逆水行舟，不进则退</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> Java </tag>
            
            <tag> vue </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Linux系统应用基础教程  期末复习【整理】 目录</title>
      <link href="/posts/3357.html"/>
      <url>/posts/3357.html</url>
      
        <content type="html"><![CDATA[<h5 id="2020-Linux系统应用基础教程-期末复习【整理】-第一章-认识linux"><a href="#2020-Linux系统应用基础教程-期末复习【整理】-第一章-认识linux" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】 第一章 认识linux"></a>2020 Linux系统应用基础教程 期末复习【整理】 第一章 认识linux</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103838844" target="_blank" rel="noopener">点击跳转第一章</a></p><a id="more"></a><h5 id="2020-Linux系统应用基础教程-期末复习【整理】-第二章-系统的启动与关闭"><a href="#2020-Linux系统应用基础教程-期末复习【整理】-第二章-系统的启动与关闭" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】 第二章 系统的启动与关闭"></a>2020 Linux系统应用基础教程 期末复习【整理】 第二章 系统的启动与关闭</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103838907" target="_blank" rel="noopener">点击跳转第二章</a></p><h5 id="2020-Linux系统应用基础教程-期末复习【整理】-第三章-用户登录和账号管理"><a href="#2020-Linux系统应用基础教程-期末复习【整理】-第三章-用户登录和账号管理" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】 第三章 用户登录和账号管理"></a>2020 Linux系统应用基础教程 期末复习【整理】 第三章 用户登录和账号管理</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103838936" target="_blank" rel="noopener">点击跳转第三章</a></p><h5 id="2020-Linux系统应用基础教程-期末复习【整理】-第四章-文件系统管理"><a href="#2020-Linux系统应用基础教程-期末复习【整理】-第四章-文件系统管理" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】 第四章 文件系统管理"></a>2020 Linux系统应用基础教程 期末复习【整理】 第四章 文件系统管理</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103838975" target="_blank" rel="noopener">点击跳转第四章</a></p><p><img src="https://img-blog.csdnimg.cn/20200104234837814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="2020-Linux系统应用基础教程-期末复习【整理】-第五章-磁盘文件与目录管理"><a href="#2020-Linux系统应用基础教程-期末复习【整理】-第五章-磁盘文件与目录管理" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】 第五章 磁盘文件与目录管理"></a>2020 Linux系统应用基础教程 期末复习【整理】 第五章 磁盘文件与目录管理</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103839013" target="_blank" rel="noopener">点击跳转第五章</a></p><h5 id="2020-Linux系统应用基础教程-期末复习【整理】第六章-Linux的包管理"><a href="#2020-Linux系统应用基础教程-期末复习【整理】第六章-Linux的包管理" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】第六章 Linux的包管理"></a>2020 Linux系统应用基础教程 期末复习【整理】第六章 Linux的包管理</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103839032" target="_blank" rel="noopener">点击跳转第六章</a></p><h5 id="2020-Linux系统应用基础教程-期末复习【整理】第七章-进程管理"><a href="#2020-Linux系统应用基础教程-期末复习【整理】第七章-进程管理" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】第七章 进程管理"></a>2020 Linux系统应用基础教程 期末复习【整理】第七章 进程管理</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103839048" target="_blank" rel="noopener">点击跳转第七章</a></p><h5 id="2020-Linux系统应用基础教程-期末复习【整理】第八章-shell编程"><a href="#2020-Linux系统应用基础教程-期末复习【整理】第八章-shell编程" class="headerlink" title="2020 Linux系统应用基础教程 期末复习【整理】第八章 shell编程"></a>2020 Linux系统应用基础教程 期末复习【整理】第八章 shell编程</h5><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103839060" target="_blank" rel="noopener">点击跳转第八章</a></p><pre class=" language-java"><code class="language-java">学如逆水行舟，不进则退</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
            <tag> 目录 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Java EE应用开发 期末复习 【整理】 目录</title>
      <link href="/posts/23878.html"/>
      <url>/posts/23878.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h4><p>==平时实验bug，实验作业在如下专栏，用于参考学习↓<br>一学期过去了，不知不觉博客又写了一些，正好得空整理一下自己本学期做过的实验，方便自己查阅与复习!==<br>gkd：<a href="https://blog.csdn.net/weixin_42429718/category_9443603.html" target="_blank" rel="noopener">跳转至——Java EE实用教程（ 第 3 版 ）专栏</a></p><a id="more"></a><p>======================  <font color="red">(考点，6点左右更新)</font>===========================</p><blockquote><p>1</p><blockquote><p>2</p><blockquote><p>3</p><blockquote><p>4</p><blockquote><p>5</p></blockquote></blockquote></blockquote></blockquote></blockquote><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*重点*/</span><span class="token comment" spellcheck="true">/*个人觉得比较重要的一部分，还在更新ing*/</span>jsp九大内置对象（可能简答题，选择题，连线题）书p60 dispatcher类型 该结果类型是默认的结果类型 通常处理jsp#的<span class="token number">3</span>点作用①非根对象 ②声明Map ③选择和投影<span class="token operator">?</span>：获得所有符合逻辑的元素<span class="token operator">^</span><span class="token operator">:</span>  获得符合逻辑的第一个元素$：获得符合逻辑的最后一个元素<span class="token operator">&lt;</span>s<span class="token operator">:</span>action<span class="token operator">></span>标签 当executeResult<span class="token operator">=</span><span class="token boolean">true</span>时，URL没有改变<span class="token operator">&lt;</span>s<span class="token operator">:</span>property<span class="token operator">></span>标签 作用是输出value属性特定的值<span class="token operator">&lt;</span>s<span class="token operator">:</span>param<span class="token operator">></span>标签 <span class="token operator">&lt;</span>s<span class="token operator">:</span>param name<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span>ycy<span class="token operator">&lt;</span><span class="token operator">/</span>s<span class="token operator">:</span>param<span class="token operator">></span>表示字符串<span class="token string">"ycy"</span><span class="token operator">&lt;</span>s<span class="token operator">:</span>param name<span class="token operator">=</span><span class="token string">"name"</span> value<span class="token operator">=</span><span class="token string">"ycy"</span><span class="token operator">/</span><span class="token operator">></span>表示为<span class="token string">"ycy"</span>对象的值如果想要指定为字符串进行如下操作<span class="token operator">:</span><span class="token operator">&lt;</span>s<span class="token operator">:</span>param name<span class="token operator">=</span><span class="token string">"name"</span> value<span class="token operator">=</span><span class="token string">"'ycy'"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>s<span class="token operator">:</span>baen<span class="token operator">></span>标签 <span class="token operator">&lt;</span>s<span class="token operator">:</span>include<span class="token operator">></span>标签 <span class="token operator">&lt;</span>s<span class="token operator">:</span>push<span class="token operator">></span>标签 <span class="token operator">&lt;</span>s<span class="token operator">:</span>set<span class="token operator">></span>标签 默认为action<span class="token operator">&lt;</span>s<span class="token operator">:</span>subset<span class="token operator">></span>标签具有过滤作用<span class="token operator">&lt;</span>s<span class="token operator">:</span>token<span class="token operator">></span>标签用来解决表单多次提交问题如何在Struts表单标签中加入CSS<span class="token operator">?</span>cssStyle<span class="token operator">:</span>指定表单元素的CSS样式在Web开发中，客户端向服务器传送的数据均为String类型类型转换当中，value是需要转换的数据<span class="token punctuation">,</span>toType是想转换的目标类型如果配置全局类型转换器，在src下建立配置文件<span class="token string">"xwork-conversion.properties"</span>（与struts<span class="token punctuation">.</span>xml文件在同一目录下）拦截器：①conversionError<span class="token operator">:</span>负责处理类型转换错误的拦截器②token<span class="token operator">:</span>用于阻止重复提交<span class="token operator">&lt;</span>s<span class="token operator">:</span>token<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>s<span class="token operator">:</span>token<span class="token operator">></span>（转成hidden，隐藏表单）获取文件路径：String xxx<span class="token operator">=</span>ServletActionContext<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span>文件夹名<span class="token punctuation">)</span>主键映射，<span class="token keyword">native</span>表示是由数据库对id赋值p196数据类型之间的转化关系表注册类型转换器配置文件名称“action类名<span class="token operator">-</span>conversion<span class="token punctuation">.</span>properties”格式需要同action放在同一位置（例org<span class="token punctuation">.</span>action包下）注册信息：变量名<span class="token operator">=</span>包名<span class="token punctuation">.</span>类名Hibernate配置文件<span class="token string">"hibernate.cfg.xml"</span>工具包<span class="token operator">:</span>HibernateSessionFactory<span class="token punctuation">.</span>javaSpring配置文件<span class="token operator">:</span>applicationContext<span class="token punctuation">.</span>xml简答题（可能考点）：Struts <span class="token number">2</span>工作流程（<span class="token number">6</span>点）p220 <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法区别JSP常用内置对象、作用及主要方法JDBC<span class="token operator">:</span>Connection、<span class="token function">statement</span><span class="token punctuation">(</span>PreparedStatement<span class="token punctuation">)</span>、ResultSet的创建及使用标签含义编程题（可能）：①Struts <span class="token number">2</span>控制标签②Struts登录注册③输入检验和类型转换<span class="token punctuation">(</span>考的话感觉会比较难<span class="token punctuation">)</span>④Spring依赖注入  <span class="token comment" spellcheck="true">//在目录当中都可以找到相应实验代码</span>⑤HQL Hibernate对数据库操作</code></pre><p><font color="red">ps:整理并不是全部，还需结合课本来</font></p><font color="red"><h4 id="2、JSP常用内置对象、作用及主要方法"><a href="#2、JSP常用内置对象、作用及主要方法" class="headerlink" title="2、JSP常用内置对象、作用及主要方法"></a>2、JSP常用内置对象、作用及主要方法</h4><p>答：<a href="https://blog.csdn.net/weixin_42429718/article/details/103864042" target="_blank" rel="noopener">跳转至——2020 jsp九大内置对象及其常用方法【整理】</a></p><h4 id="3、Struts-2的工作流程，Struts-xml的主要标签"><a href="#3、Struts-2的工作流程，Struts-xml的主要标签" class="headerlink" title="3、Struts 2的工作流程，Struts.xml的主要标签"></a>3、Struts 2的工作流程，Struts.xml的主要标签</h4><blockquote><p>更新于2020-1-7 12:50</p></blockquote><p>答：<a href="https://blog.csdn.net/weixin_42429718/article/details/103872326" target="_blank" rel="noopener">跳转至——Struts 2的工作原理及工作流程 【整理】</a></p><h4 id="4、JDBC-Connection、statement-PreparedStatement-、ResultSet的创建及使用"><a href="#4、JDBC-Connection、statement-PreparedStatement-、ResultSet的创建及使用" class="headerlink" title="4、JDBC:Connection、statement(PreparedStatement)、ResultSet的创建及使用"></a>4、JDBC:Connection、statement(PreparedStatement)、ResultSet的创建及使用</h4><p>答：<a href="https://blog.csdn.net/weixin_42429718/article/details/103864309" target="_blank" rel="noopener">跳转至——【三大接口】JDBC:Connection、statement(PreparedStatement)、ResultSet的创建及使用 【整理】</a></p><h4 id="5、OGNL-表达式的使用，常用的Structs-2标签，重点：控制标签（if-else-if-else-iterator-merge-generator-sort-subset-）"><a href="#5、OGNL-表达式的使用，常用的Structs-2标签，重点：控制标签（if-else-if-else-iterator-merge-generator-sort-subset-）" class="headerlink" title="5、OGNL 表达式的使用，常用的Structs 2标签，重点：控制标签（if * , else if ,else ,iterator  *,merge,  generator , sort *,subset *）"></a>5、OGNL 表达式的使用，常用的Structs 2标签，重点：控制标签（if * , else if ,else ,iterator  *,merge,  generator , sort *,subset *）</h4><p>答：<a href="https://blog.csdn.net/weixin_42429718/article/details/103864753" target="_blank" rel="noopener">跳转至——常用Struts 2标签用法 【整理】</a></p><blockquote><p>更新于2020-1-7 12:35</p></blockquote><h6 id="5-1-的作用？"><a href="#5-1-的作用？" class="headerlink" title="5.1 #的作用？"></a>5.1 #的作用？</h6><p>①非根对象 ②声明Map ③选择和投影</p><hr><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662100" target="_blank" rel="noopener">跳转至——熟悉action标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662137" target="_blank" rel="noopener">跳转至——熟悉bean标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662163" target="_blank" rel="noopener">跳转至——熟悉include标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662197" target="_blank" rel="noopener">跳转至——熟悉if、elseif和else标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662214" target="_blank" rel="noopener">跳转至——熟悉iterator标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662234" target="_blank" rel="noopener">跳转至——熟悉append标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662248" target="_blank" rel="noopener">跳转至——熟悉generator标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662261" target="_blank" rel="noopener">跳转至——熟悉sort标签的用法</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662281" target="_blank" rel="noopener">跳转至——熟悉subset标签的用法</a></p><h4 id="6、Struts中输入校验和类型转换的实现"><a href="#6、Struts中输入校验和类型转换的实现" class="headerlink" title="6、Struts中输入校验和类型转换的实现"></a>6、Struts中输入校验和类型转换的实现</h4><p>==客户端向服务器传递的数据均为String类型==</p><p>答：<a href="https://blog.csdn.net/weixin_42429718/article/details/103865377" target="_blank" rel="noopener">跳转至——Struts 2中输入校验和类型转换的实现 【整理】</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103108601" target="_blank" rel="noopener">跳转至——Struts2+Hibernate实现完整的注册和登录功能（数据校验）</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102873811" target="_blank" rel="noopener">跳转至——Struts2校验框架 【校验学生的基本信息】【validators】</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102873608" target="_blank" rel="noopener">跳转至——Struts2 框架 实现生日形式转化 + 根据当前系统日期显示年龄（实岁）</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102874079" target="_blank" rel="noopener">跳转至——Struts实现图片上传功能【校验图片格式】</a></p><h4 id="7、Hibernate配置文件与核心接口"><a href="#7、Hibernate配置文件与核心接口" class="headerlink" title="7、Hibernate配置文件与核心接口"></a>7、Hibernate配置文件与核心接口</h4><p>答：<a href="https://blog.csdn.net/weixin_42429718/article/details/103865482" target="_blank" rel="noopener">跳转至——2020 Hibernate之核心接口 【整理】</a></p><h4 id="8、Hibernate映射机制（重点：对象关系映射），映射文件XXX-hbm-xml的缩写"><a href="#8、Hibernate映射机制（重点：对象关系映射），映射文件XXX-hbm-xml的缩写" class="headerlink" title="8、Hibernate映射机制（重点：对象关系映射），映射文件XXX.hbm.xml的缩写"></a>8、Hibernate映射机制（重点：对象关系映射），映射文件XXX.hbm.xml的缩写</h4><p>答：==主要还是结合平常做过的实验来看==</p><p><a href="https://blog.csdn.net/weixin_42429718/category_9443603.html" target="_blank" rel="noopener">跳转至——JavaEE实验专栏</a></p><hr><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103296728" target="_blank" rel="noopener">跳转至——采用“每个类一个数据表”的方式，实现继承关系映射</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103297569" target="_blank" rel="noopener">跳转至——采用“共享一个数据库表”的方式，实现继承关系映射</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103304513" target="_blank" rel="noopener">跳转至——在Hibernate中实现一对一关联关系的映射</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103314431" target="_blank" rel="noopener">跳转至——在Hibernate中实现一对多关联关系的映射①</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103305136" target="_blank" rel="noopener">跳转至——在Hibernate中实现一对多关联关系的映射②</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103318565" target="_blank" rel="noopener">跳转至——在Hibernate中实现多对多关联关系的映射</a></p><hr><h4 id="9、HQL和Hibernate分页查询"><a href="#9、HQL和Hibernate分页查询" class="headerlink" title="9、HQL和Hibernate分页查询"></a>9、HQL和Hibernate分页查询</h4><p>答：<a href="https://blog.csdn.net/weixin_42429718/category_9443603.html" target="_blank" rel="noopener">跳转至——JavaEE实验专栏</a></p><h4 id="10、使用Hibernate对持久化对象进行操作（Session对象的常用方法），如何通过Hibernate实现数据库增删改查等操作"><a href="#10、使用Hibernate对持久化对象进行操作（Session对象的常用方法），如何通过Hibernate实现数据库增删改查等操作" class="headerlink" title="10、使用Hibernate对持久化对象进行操作（Session对象的常用方法），如何通过Hibernate实现数据库增删改查等操作"></a>10、使用Hibernate对持久化对象进行操作（Session对象的常用方法），如何通过Hibernate实现数据库增删改查等操作</h4><p>答：<a href="https://blog.csdn.net/weixin_42429718/category_9443603.html" target="_blank" rel="noopener">跳转至——JavaEE实验专栏</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103114869" target="_blank" rel="noopener">跳转至——通过“单独定义主键类”实现“复合自然主键的映射”，并编写测试代码实现数据的增、删、改、查等操作</a></p><h4 id="11、Spring中的依赖注入和配置文件"><a href="#11、Spring中的依赖注入和配置文件" class="headerlink" title="11、Spring中的依赖注入和配置文件"></a>11、Spring中的依赖注入和配置文件</h4><p>答：==结合做过的实验了解==</p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103472696" target="_blank" rel="noopener">跳转至——第一个Spring程序（Hello ACM！）</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103472819" target="_blank" rel="noopener">跳转至——JavaEE之Spring的核心机制—依赖注入 【趣味吃水果入门】</a></p><p><img src="https://img-blog.csdnimg.cn/20200106223209233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><font color="red">ps:Web技术最后大题是手写登录注册，这学期从头到尾也是登录注册，张无忌、小龙女…..登录注册总会扯上关系，还是整理一下</font></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/102662313" target="_blank" rel="noopener">跳转至——使用Struts2标签设计一个电子商务网站用户注册界面</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103741183" target="_blank" rel="noopener">跳转至——使用SSH框架实现简单的登录注册功能</a></p><p>==复习的时候再补充补充缺的，洗洗睡了…==<br><img src="https://img-blog.csdnimg.cn/20200106224731341.jpg" alt="在这里插入图片描述"></p><p><font color="chocolate">有任何问题可以评论留言一下，欢迎关注点赞一波,欢迎来白嫖~<br><img src="https://img-blog.csdnimg.cn/20200106224719501.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></font></p><font color="chocolate"><pre class=" language-java"><code class="language-java">学如逆水行舟，不进则退</code></pre></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java EE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaEE </tag>
            
            <tag> 期末复习 </tag>
            
            <tag> 目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Win10】Hexo yelee主题 搭建个人主页【整合目录】</title>
      <link href="/posts/42667.html"/>
      <url>/posts/42667.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>由于特殊时期，对于学习的时间更多了一点，<strong><font color="red">与其每天发霉，不如好好利用这个时光做点有意义的事情</font></strong>，于是，发现自己动手从零搭建一个个人主页就是一个不错的选择，既能锻炼动手能力，又能做出一点让自己很有成就感的东西。</p><p><strong><font color="chocolate">备注：由于博主水平有限，也还在学习当中，从零搭建自己的个人主页，主页也还在建设中，如果大家有什么不错的点子，或者更加优美的界面，特别欢迎您的分享~</font></strong></p><p>持续更新中…</p><a id="more"></a><hr><p>以下就是我目前做的从零搭建个人主页的专栏目录，读者可以阅读前几篇比较优质的文章。</p><p><strong>如果在某一个过程出了bug，特别欢迎大家在该篇博客底下评论区留言，看到评论我会立马回复的，您的bug或许也是我写博客的问题，所以提出来是一件好事！</strong></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/104239306" target="_blank" rel="noopener">推荐阅读：【Win10】搭建个人博客 Hexo框架 （自制）</a></p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/104241072" target="_blank" rel="noopener">推荐阅读：【Win10】搭建个人博客 Hexo框架（部署到 github 上并 导入美化样式 ）</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104256455" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （一）解决所有文章，缺失模块问题</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104256675" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （二）配置图片资源</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104258624" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （三）文章显示摘要</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104258985" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （四）文章显示目录</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104259134" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （五）增加归档菜单</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104259171" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （六）修改代码块样式</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104259637" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （七）增加不蒜子统计</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104260016" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （八）添加Gitment评论系统</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104262008" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （九）添加字数统计和阅读时长功能</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104262871" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （十）添加版权说明（更新配置版）</a></p><p><a href="https://chocolate.blog.csdn.net/article/details/104265209" target="_blank" rel="noopener">推荐阅读：【Win10】Hexo 搭建个人主页 （十一）添加网易云音乐</a></p><h4 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h4><p>对yilia主题比较着迷的，提供以下主题，便于后续开发，至于前面都是基础供自己入门，后面我的主页会根据这个主题进行开发，那么期待我全新的个人主页把，后续就读者自行设计开发啦</p><p><a href="http://moxfive.xyz/yelee/1.Getting-Started/i18n.html" target="_blank" rel="noopener">基于主题 Hexo-Theme-Yilia 的主题 “夜Yelee” 。<br>  </a></p><p>个人喜欢简洁的样式，重视内容的浏览，同时希望作为个人网站的博客，能稍微凸显出博主个性。各种修改折腾大抵基于以上考虑。</p><p>完结，撒花</p><p><font color="red">✿✿ヽ(°▽°)ノ✿<br><font color="red">✿✿ヽ(°▽°)ノ✿<br><font color="red">✿✿ヽ(°▽°)ノ✿</font></font></font></p><font color="red"><font color="red"><font color="red"><pre class=" language-clike"><code class="language-clike">学如逆水行舟，不进则退</code></pre></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 零基础 </tag>
            
            <tag> yelee主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020  我把大学四年ACM模板分享了出来【总结】 ACMer一定要来看！</title>
      <link href="/posts/26262.html"/>
      <url>/posts/26262.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h4><p>大二下学期正式入ACM，大家一看这时间就知道算是挺晚的了，因为我大一比较迷茫，没有在大学加过任何部门，学习也提不上什么劲，大二上开始有了自己的想法，在班上成功竞选上了学习委员，然后我越发积极，在大二上的寒假假期独自在家刷题，目的就是为了蓝桥杯，初赛挺适合新手锻炼的，刷题目的就是为了学校的选拔赛，争取名额，后面当然得到了名额，最后在比赛也取得了省二的成绩，这让我无比激动，原来付出真的有回报，从此我的ACM生涯就开始了！</p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/100115006" target="_blank" rel="noopener">推荐阅读这篇文章——2019年（第15届）湖南省大学生计算机程序设计竞赛之【赛前动员暨暑假集训总结】</a></p><a id="more"></a><h4 id="2、心得与体会"><a href="#2、心得与体会" class="headerlink" title="2、心得与体会"></a>2、心得与体会</h4><p>有的时候，感觉自己刷题刷不动的时候，我就会看一看大神关于退役的总结，没想到今天自己也会来总结了，我就简单和大家聊一聊ACM把<br>走上ACM，就像一个表情包所说，本就是逆天而行，<strong><font color="red">很多人走着走着就放弃了，打不动了，学习到了瓶颈期，其实并不是ACM他们会放弃，做其他的也依旧会放弃。</font></strong> 我曾经问过打过ACM然后放弃的一位学长，因为当时我也在考虑自己是继续打下去还是放弃乖乖增加项目经验，他说<strong>打ACM对找工作其实没有很多帮助，因为对于普通学校来说，或者对于普通人来说，想要拿到那种区域赛的奖是有一定难度的，真正有帮助的还是去实践增加项目经验，后面补了一句当初有点后悔自己去打acm，花费了很多时间在这上面，把这些时间利用起来做项目的话可能现在更好。</strong> 后面又和学长聊了聊工作方面的事情，我原本有点消极的感受立马消散了，后感谢了学长和我交谈。</p><hr><p>请读者海纳百川有容乃大，或许这就是广大acm同胞放弃的观念把，这里，我先表明我自己的观点。<strong><font color="red">打ACM绝对不是一件让我后悔的事情，如果自己喜欢的事情都会做的后悔，那做其他事还有什么意义！</font></strong> 正是因为接触了ACM，我的学习状态一直保持了下去，养成了一个积极好学的习惯，尽管每一周都会因为一个题目弄的自闭，但是成长的过程本身就是这样，不吃点苦哪能感受甜的味道；正是因为接触了ACM，我才坚持去写CSDN博客，才有了现在这样的成就；正是因为接触了ACM，算综测的时候我不再是拿不出东西，我能拿出一点比赛的证书为自己加分；正是因为接触了ACM,我才会为了拿到学校奖学金而拼搏，而奋斗！</p><p>对于计算机专业来说，我想ACM是必经之路，走上ACM道路不代表你就一定能拿奖，也不代表你就一定要去比赛，我们去公司笔试很多都是与这方面有关，而且有些公司还会强调要有一定ACM基础，可看重要程度！<br>当然，能够拿奖是走上ACM道路的一个目标，也是一份荣誉！</p><p><a href="https://blog.csdn.net/weixin_42429718/article/details/103052899" target="_blank" rel="noopener">推荐阅读这篇博客——第四届全国中医药院校大学生程序设计竞赛【河南-郑州之旅】暨FPX夺冠&amp;湖南中医药大学夺冠！（上篇）——记录美好的时光！</a></p><p>谈了ACM，也谈了大众观念，也谈了自己的态度，那段时光只有经历的人会有共同的感受，<strong><font color="red"> 希望看到这篇文章的你有着“科比”精神，对于自己喜欢、热爱的事情坚持下去，如果连自己喜欢的事情都做不好，坚持不下去，还谈什么增加项目经验，人生不就是为了自己热爱喜欢的东西而拼搏么？跌倒了一次又一次爬起来，继续走下去… </font></strong></p><h4 id="3、分享模板"><a href="#3、分享模板" class="headerlink" title="3、分享模板"></a>3、分享模板</h4><p>下面就是我整理的ACM模板了，总共429页，但是大小也就1MB多点，想来想去，还是分享出去吧，自己退役了，想着模板还能继续发挥它的作用，也是件不错的事情，那么我就将我的“武器”授予给你们了，好好使用~<br><img src="https://img-blog.csdnimg.cn/2020012710292183.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020012710273520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>链接：<a href="https://pan.baidu.com/s/15SonnPLAqKIr96ZwxRi1AQ" target="_blank" rel="noopener">https://pan.baidu.com/s/15SonnPLAqKIr96ZwxRi1AQ</a><br>提取码：klw3 </p><p><font color="chocolate">PS：如果你觉得本模板不错的话，欢迎打赏一下，原则上免费自取，但是也仅需1元打赏就好了，我想知道我的模版是否够好，如果不够好的话，我再更新一下~</font></p><font color="chocolate"><img src="https://img-blog.csdnimg.cn/20200127113159877.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" width="25%" height="25%"><hr><p><font size="4">  2020年2月7日更新 ，想不到还真有打赏给我的啦，点赞数也挺多的，谢谢各位的支持！</font></p><font size="4"><pre class=" language-javascript"><code class="language-javascript">学如逆水行舟，不进则退</code></pre></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 心路历程❤ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acm </tag>
            
            <tag> 模板 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python 】25 个有用的 Python 代码片段来帮助你的日常工作</title>
      <link href="/posts/35234.html"/>
      <url>/posts/35234.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20200208132400835.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>Python 是一种通用的高级编程语言。用它可以做许多事，比如开发桌面 GUI 应用程序、网站和 Web 应用程序等。<br>并且，通过处理常见的编程任务，Python 能让开发者专注应用程序的核心功能。此外，Python 语言的简单语法规则进一步简化了代码库的可读性和应用程序的可维护性。</p><p>与其他编程语言相比，Python 的优势在于：</p><a id="more"></a><ul><li>与主要平台和操作系统兼容；</li><li>有许多开源框架和工具；</li><li>代码具备可读性和可维护性；</li><li>健壮的标准库；</li><li>标准测试驱动开发</li></ul><p>在本文，我将介绍 25 个简短且有用的代码段，它们可以帮你完成日常任务。</p><blockquote><p>参考英文资料：<a href="https://medium.com/better-programming/25-useful-python-snippets-to-help-in-your-day-to-day-work-d59c636ec1b" target="_blank" rel="noopener">25 Useful Python Snippets to Help in Your Day-to-Day Work</a></p></blockquote><h4 id="1-在两个变量之间交换值"><a href="#1-在两个变量之间交换值" class="headerlink" title="1. 在两个变量之间交换值"></a>1. 在两个变量之间交换值</h4><p>在其他语言中，要在两个变量间交换值而不是用第三个变量，我们要么使用算术运算符，要么使用位异或（Bitwise XOR）。在 Python 中，它就简单多了，如下所示。</p><pre class=" language-cpp"><code class="language-cpp">a <span class="token operator">=</span> <span class="token number">5</span>b <span class="token operator">=</span> <span class="token number">10</span>                   a<span class="token punctuation">,</span>b <span class="token operator">=</span> b<span class="token punctuation">,</span>a<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> # <span class="token number">10</span><span class="token function">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> # <span class="token number">5</span></code></pre><h4 id="2-检查给定的数字是否为偶数"><a href="#2-检查给定的数字是否为偶数" class="headerlink" title="2. 检查给定的数字是否为偶数"></a>2. 检查给定的数字是否为偶数</h4><p>如果给定的数字为偶数，则如下函数返回 Ture，否则返回 False。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">is_even</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token function">is_even</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> # True</code></pre><h4 id="3-将多行字符串拆分为行列表"><a href="#3-将多行字符串拆分为行列表" class="headerlink" title="3. 将多行字符串拆分为行列表"></a>3. 将多行字符串拆分为行列表</h4><p>以下函数可用于将多行字符串拆分为行列表。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">split_lines</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token function">split_lines</span><span class="token punctuation">(</span><span class="token string">'50\n python\n snippets'</span><span class="token punctuation">)</span> # <span class="token punctuation">[</span><span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">' python'</span><span class="token punctuation">,</span> <span class="token string">' snippets'</span><span class="token punctuation">]</span></code></pre><h4 id="4-查找对象使用的内存"><a href="#4-查找对象使用的内存" class="headerlink" title="4. 查找对象使用的内存"></a>4. 查找对象使用的内存</h4><p>标准库的 sys 模块提供了 getsizeof() 函数。该函数接受一个对象，调用对象的 sizeof() 方法，并返回结果，这样做能使对象可检查。</p><pre class=" language-cpp"><code class="language-cpp">import sys<span class="token function">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span><span class="token function">getsizeof</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token number">28</span><span class="token function">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span><span class="token function">getsizeof</span><span class="token punctuation">(</span><span class="token string">"Python"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token number">55</span></code></pre><h4 id="5-反转字符串"><a href="#5-反转字符串" class="headerlink" title="5. 反转字符串"></a>5. 反转字符串</h4><p>Python 字符串库不像其他 Python 容器（如 list) 那样支持内置的 reverse()。反转字符串有很多方法，其中最简单的方法是使用切片运算符（slicing operator）。</p><pre class=" language-cpp"><code class="language-cpp">language <span class="token operator">=</span> <span class="token string">"python"</span>reversed_language <span class="token operator">=</span> language<span class="token punctuation">[</span><span class="token operator">::</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token function">print</span><span class="token punctuation">(</span>reversed_language<span class="token punctuation">)</span> # nohtyp</code></pre><h4 id="6-打印字符串-n-次"><a href="#6-打印字符串-n-次" class="headerlink" title="6. 打印字符串 n 次"></a>6. 打印字符串 n 次</h4><p>在不使用循环的情况下，要打印一个字符串 n 次是非常容易的，如下所示。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">repeat</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>string <span class="token operator">*</span> n<span class="token punctuation">)</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">'python'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> # pythonpythonpython</code></pre><h4 id="7-检查字符串是否为回文"><a href="#7-检查字符串是否为回文" class="headerlink" title="7. 检查字符串是否为回文"></a>7. 检查字符串是否为回文</h4><p>以下函数用于检查字符串是否为回文。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">palindrome</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> string <span class="token operator">==</span> string<span class="token punctuation">[</span><span class="token operator">::</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token function">palindrome</span><span class="token punctuation">(</span><span class="token string">'python'</span><span class="token punctuation">)</span> # False</code></pre><h4 id="8-将字符串列表合并为单个字符串"><a href="#8-将字符串列表合并为单个字符串" class="headerlink" title="8. 将字符串列表合并为单个字符串"></a>8. 将字符串列表合并为单个字符串</h4><p>下面的代码段将字符串列表组合成单个字符串。</p><pre class=" language-cpp"><code class="language-cpp">strings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">'python'</span><span class="token punctuation">,</span> <span class="token string">'snippets'</span><span class="token punctuation">]</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>strings<span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token number">50</span><span class="token punctuation">,</span>python<span class="token punctuation">,</span>snippets</code></pre><h4 id="9-查找列表的第一个元素"><a href="#9-查找列表的第一个元素" class="headerlink" title="9. 查找列表的第一个元素"></a>9. 查找列表的第一个元素</h4><p>此函数返回所传递列表的第一个元素。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">head</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token operator">:</span>  <span class="token keyword">return</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">head</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token number">1</span></code></pre><h4 id="10-查找存在于两个列表中任一列表存在的元素"><a href="#10-查找存在于两个列表中任一列表存在的元素" class="headerlink" title="10. 查找存在于两个列表中任一列表存在的元素"></a>10. 查找存在于两个列表中任一列表存在的元素</h4><p>此函数返回两个列表中任一列表中的每个元素。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token keyword">union</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token function">set</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">union</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> # <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span></code></pre><h4 id="11-查找给定列表中的所有唯一元素"><a href="#11-查找给定列表中的所有唯一元素" class="headerlink" title="11. 查找给定列表中的所有唯一元素"></a>11. 查找给定列表中的所有唯一元素</h4><p>此函数返回给定列表中存在的唯一元素。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">unique_elements</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token function">set</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">unique_elements</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> # <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span></code></pre><h4 id="12-求一组数字的平均值"><a href="#12-求一组数字的平均值" class="headerlink" title="12. 求一组数字的平均值"></a>12. 求一组数字的平均值</h4><p>此函数返回列表中两个或多个数字的平均值。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">average</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token operator">:</span>  <span class="token keyword">return</span> <span class="token function">sum</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token function">average</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> # <span class="token number">5.0</span></code></pre><h4 id="13-检查列表是否包含所有唯一值"><a href="#13-检查列表是否包含所有唯一值" class="headerlink" title="13. 检查列表是否包含所有唯一值"></a>13. 检查列表是否包含所有唯一值</h4><p>此函数检查列表中的所有元素是否都是唯一的。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">unique</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token operator">==</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token function">set</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"All elements are unique"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token operator">:</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"List has duplicates"</span><span class="token punctuation">)</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> # All elements are unique</code></pre><h4 id="14-跟踪列表中元素的频率"><a href="#14-跟踪列表中元素的频率" class="headerlink" title="14. 跟踪列表中元素的频率"></a>14. 跟踪列表中元素的频率</h4><p>Python 计数器跟踪容器中每个元素的频率。 Counter() 返回一个以元素为键、以其出现频率为值的字典。</p><pre class=" language-cpp"><code class="language-cpp">from collections import Counterlist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>count <span class="token operator">=</span> <span class="token function">Counter</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> # <span class="token punctuation">{</span><span class="token number">2</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span></code></pre><h4 id="15-查找列表中最常用的元素"><a href="#15-查找列表中最常用的元素" class="headerlink" title="15. 查找列表中最常用的元素"></a>15. 查找列表中最常用的元素</h4><p>此函数返回列表中出现频率最高的元素。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">most_frequent</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">set</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">,</span> key <span class="token operator">=</span> list<span class="token punctuation">.</span>count<span class="token punctuation">)</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token function">most_frequent</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> # <span class="token number">3</span></code></pre><h4 id="16-将角度转换为弧度"><a href="#16-将角度转换为弧度" class="headerlink" title="16. 将角度转换为弧度"></a>16. 将角度转换为弧度</h4><p>下面的函数用于将角度转换为弧度。</p><pre class=" language-cpp"><code class="language-cpp">import mathdef <span class="token function">degrees_to_radians</span><span class="token punctuation">(</span>deg<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>deg <span class="token operator">*</span> math<span class="token punctuation">.</span>pi<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">180.0</span> <span class="token function">degrees_to_radians</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span> # <span class="token number">1.5707963267948966</span></code></pre><h4 id="17-计算执行一段代码所需的时间"><a href="#17-计算执行一段代码所需的时间" class="headerlink" title="17. 计算执行一段代码所需的时间"></a>17. 计算执行一段代码所需的时间</h4><p>以下代码段用于计算执行一段代码所需的时间。</p><pre class=" language-cpp"><code class="language-cpp">import timestart_time <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span>c <span class="token operator">=</span> a<span class="token operator">+</span>bend_time <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span>time_taken <span class="token operator">=</span> <span class="token punctuation">(</span>end_time<span class="token operator">-</span> start_time<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Time taken in micro_seconds:"</span><span class="token punctuation">,</span> time_taken<span class="token punctuation">)</span> # Time taken in micro_seconds<span class="token operator">:</span> <span class="token number">39.577484130859375</span></code></pre><h4 id="18-查找数字列表的最大公约数"><a href="#18-查找数字列表的最大公约数" class="headerlink" title="18. 查找数字列表的最大公约数"></a>18. 查找数字列表的最大公约数</h4><p>此函数计算数字列表中的最大公约数。</p><pre class=" language-cpp"><code class="language-cpp">from functools import reduceimport mathdef <span class="token function">gcd</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> <span class="token function">reduce</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>gcd<span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token function">gcd</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">)</span> # <span class="token number">6</span></code></pre><h4 id="19-查找字符串中的唯一字符"><a href="#19-查找字符串中的唯一字符" class="headerlink" title="19. 查找字符串中的唯一字符"></a>19. 查找字符串中的唯一字符</h4><p>此代码段可用于查找字符串中的所有唯一字符。</p><pre class=" language-cpp"><code class="language-cpp">string <span class="token operator">=</span> <span class="token string">"abcbcabdb"</span>   unique <span class="token operator">=</span> <span class="token function">set</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>new_string <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>unique<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>new_string<span class="token punctuation">)</span> # abcd</code></pre><h4 id="20-使用-lambda-函数"><a href="#20-使用-lambda-函数" class="headerlink" title="20. 使用 lambda 函数"></a>20. 使用 lambda 函数</h4><p>Lambda 是一个匿名函数，它只能保存一个表达式。</p><pre class=" language-cpp"><code class="language-cpp">x <span class="token operator">=</span> lambda a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">:</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token function">print</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token number">35</span></code></pre><h4 id="21-使用映射函数"><a href="#21-使用映射函数" class="headerlink" title="21. 使用映射函数"></a>21. 使用映射函数</h4><p>此函数在将给定函数应用于给定迭代的每个项（列表、元组等）之后，返回一个结果列表。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">multiply</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">:</span>     <span class="token keyword">return</span> n <span class="token operator">*</span> n list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> result <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>multiply<span class="token punctuation">,</span> list<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token function">list</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span></code></pre><h4 id="22-使用筛选函数"><a href="#22-使用筛选函数" class="headerlink" title="22. 使用筛选函数"></a>22. 使用筛选函数</h4><p>此函数在通过一个函数过滤给定的序列，测试序列中的每个元素是否为真。</p><pre class=" language-cpp"><code class="language-cpp">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>arr <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token function">filter</span><span class="token punctuation">(</span>lambda x <span class="token operator">:</span> x<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">print</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> # <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span></code></pre><h4 id="23-使用列表解析"><a href="#23-使用列表解析" class="headerlink" title="23. 使用列表解析"></a>23. 使用列表解析</h4><p>列表解析（list comprehensions）为我们提供了一种基于某些迭代创建列表的简单方法。在创建过程中，可以将来自可迭代的元素有条件地包含到新列表中，并根据需要进行转换。</p><pre class=" language-cpp"><code class="language-cpp">numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>squares <span class="token operator">=</span> <span class="token punctuation">[</span>number<span class="token operator">*</span><span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">for</span> number in numbers<span class="token punctuation">]</span><span class="token function">print</span><span class="token punctuation">(</span>squares<span class="token punctuation">)</span> # <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span></code></pre><h4 id="24-使用切片运算符"><a href="#24-使用切片运算符" class="headerlink" title="24. 使用切片运算符"></a>24. 使用切片运算符</h4><p>切片（Slicing）用于从给定序列中提取连续的元素序列或子序列。下面的函数用于连接两个切片运算的结果。首先，我们将列表从索引 d 切片到末尾，然后从开头切片到索引 d。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">rotate</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> arr<span class="token punctuation">[</span>d<span class="token operator">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token operator">:</span>d<span class="token punctuation">]</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token operator">:</span>    arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>    arr <span class="token operator">=</span> <span class="token function">rotate</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token function">print</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> # <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span></code></pre><h4 id="25-使用函数链式调用"><a href="#25-使用函数链式调用" class="headerlink" title="25. 使用函数链式调用"></a>25. 使用函数链式调用</h4><p>最后的代码段用于从一行调用多个函数并计算结果。</p><pre class=" language-cpp"><code class="language-cpp">def <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> bdef <span class="token function">subtract</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token operator">:</span>    <span class="token keyword">return</span> a <span class="token operator">-</span> ba<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>subtract <span class="token keyword">if</span> a <span class="token operator">></span> b <span class="token keyword">else</span> add<span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> # <span class="token number">15</span></code></pre><pre class=" language-cpp"><code class="language-cpp">学如逆水行舟，不进则退</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 编程语言 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
